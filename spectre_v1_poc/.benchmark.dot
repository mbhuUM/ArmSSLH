digraph "CFG for 'benchmark' function" {
	label="CFG for 'benchmark' function";

	Node0x6000028e4540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{%0:\l  %1 = alloca %struct.timeval, align 8\l  %2 = alloca %struct.timeval, align 8\l  %3 = alloca i32, align 4\l  %4 = alloca i32, align 4\l  %5 = alloca [5 x i8], align 1\l  %6 = alloca ptr, align 8\l  %7 = alloca i32, align 4\l  %8 = alloca i32, align 4\l  %9 = alloca i32, align 4\l  %10 = alloca i32, align 4\l  %11 = alloca i32, align 4\l  %12 = alloca i32, align 4\l  %13 = alloca i32, align 4\l  %14 = alloca i32, align 4\l  store i32 0, ptr %3, align 4\l  store i32 10240, ptr %4, align 4\l  %15 = call ptr @malloc(i64 noundef 1024) #3\l  store ptr %15, ptr %6, align 8\l  store i32 0, ptr %7, align 4\l  br label %16\l}"];
	Node0x6000028e4540 -> Node0x6000028e4600;
	Node0x6000028e4600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%16:\l16:                                               \l  %17 = load i32, ptr %7, align 4\l  %18 = icmp slt i32 %17, 1024\l  br i1 %18, label %19, label %27\l|{<s0>T|<s1>F}}"];
	Node0x6000028e4600:s0 -> Node0x6000028e4640;
	Node0x6000028e4600:s1 -> Node0x6000028e46c0;
	Node0x6000028e4640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%19:\l19:                                               \l  %20 = load ptr, ptr %6, align 8\l  %21 = load i32, ptr %7, align 4\l  %22 = sext i32 %21 to i64\l  %23 = getelementptr inbounds i8, ptr %20, i64 %22\l  store i8 65, ptr %23, align 1\l  br label %24\l}"];
	Node0x6000028e4640 -> Node0x6000028e4680;
	Node0x6000028e4680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%24:\l24:                                               \l  %25 = load i32, ptr %7, align 4\l  %26 = add nsw i32 %25, 1\l  store i32 %26, ptr %7, align 4\l  br label %16, !llvm.loop !6\l}"];
	Node0x6000028e4680 -> Node0x6000028e4600;
	Node0x6000028e46c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{%27:\l27:                                               \l  %28 = load ptr, ptr %6, align 8\l  %29 = getelementptr inbounds i8, ptr %28, i64 1023\l  store i8 0, ptr %29, align 1\l  store i32 0, ptr %8, align 4\l  br label %30\l}"];
	Node0x6000028e46c0 -> Node0x6000028e4700;
	Node0x6000028e4700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%30:\l30:                                               \l  %31 = load i32, ptr %8, align 4\l  %32 = icmp slt i32 %31, 5\l  br i1 %32, label %33, label %40\l|{<s0>T|<s1>F}}"];
	Node0x6000028e4700:s0 -> Node0x6000028e4780;
	Node0x6000028e4700:s1 -> Node0x6000028e4800;
	Node0x6000028e4780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%33:\l33:                                               \l  %34 = load i32, ptr %8, align 4\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds [5 x i8], ptr %5, i64 0, i64 %35\l  store i8 113, ptr %36, align 1\l  br label %37\l}"];
	Node0x6000028e4780 -> Node0x6000028e47c0;
	Node0x6000028e47c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%37:\l37:                                               \l  %38 = load i32, ptr %8, align 4\l  %39 = add nsw i32 %38, 1\l  store i32 %39, ptr %8, align 4\l  br label %30, !llvm.loop !8\l}"];
	Node0x6000028e47c0 -> Node0x6000028e4700;
	Node0x6000028e4800 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{%40:\l40:                                               \l  %41 = getelementptr inbounds [5 x i8], ptr %5, i64 0, i64 4\l  store i8 0, ptr %41, align 1\l  %42 = call i32 @gettimeofday(ptr noundef %1, ptr noundef null)\l  %43 = load ptr, ptr %6, align 8\l  %44 = getelementptr inbounds [5 x i8], ptr %5, i64 0, i64 0\l  %45 = call i32 @setup(ptr noundef %43, ptr noundef %44)\l  %46 = call i32 @gettimeofday(ptr noundef %2, ptr noundef null)\l  %47 = getelementptr inbounds %struct.timeval, ptr %2, i32 0, i32 0\l  %48 = load i64, ptr %47, align 8\l  %49 = getelementptr inbounds %struct.timeval, ptr %1, i32 0, i32 0\l  %50 = load i64, ptr %49, align 8\l  %51 = sub nsw i64 %48, %50\l  %52 = mul nsw i64 %51, 1000\l  %53 = getelementptr inbounds %struct.timeval, ptr %2, i32 0, i32 1\l  %54 = load i32, ptr %53, align 8\l  %55 = getelementptr inbounds %struct.timeval, ptr %1, i32 0, i32 1\l  %56 = load i32, ptr %55, align 8\l  %57 = sub nsw i32 %54, %56\l  %58 = sdiv i32 %57, 1000\l  %59 = sext i32 %58 to i64\l  %60 = add nsw i64 %52, %59\l  %61 = trunc i64 %60 to i32\l  store i32 %61, ptr %9, align 4\l  %62 = load ptr, ptr %6, align 8\l  %63 = call i64 @strlen(ptr noundef %62)\l  %64 = add i64 %63, 1\l  %65 = trunc i64 %64 to i32\l  store i32 %65, ptr %10, align 4\l  %66 = call i32 @gettimeofday(ptr noundef %1, ptr noundef null)\l  store i32 0, ptr %11, align 4\l  br label %67\l}"];
	Node0x6000028e4800 -> Node0x6000028e49c0;
	Node0x6000028e49c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%67:\l67:                                               \l  %68 = load i32, ptr %11, align 4\l  %69 = load i32, ptr %4, align 4\l  %70 = sdiv i32 %69, 4\l  %71 = icmp slt i32 %68, %70\l  br i1 %71, label %72, label %98\l|{<s0>T|<s1>F}}"];
	Node0x6000028e49c0:s0 -> Node0x6000028e4a00;
	Node0x6000028e49c0:s1 -> Node0x6000028e4a80;
	Node0x6000028e4a00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%72:\l72:                                               \l  store i32 0, ptr %12, align 4\l  br label %73\l}"];
	Node0x6000028e4a00 -> Node0x6000028e4a40;
	Node0x6000028e4a40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%73:\l73:                                               \l  %74 = load i32, ptr %12, align 4\l  %75 = icmp slt i32 %74, 4\l  br i1 %75, label %76, label %94\l|{<s0>T|<s1>F}}"];
	Node0x6000028e4a40:s0 -> Node0x6000028e4b00;
	Node0x6000028e4a40:s1 -> Node0x6000028e4b80;
	Node0x6000028e4b00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%76:\l76:                                               \l  %77 = load i32, ptr %10, align 4\l  %78 = load i32, ptr %12, align 4\l  %79 = add nsw i32 %77, %78\l  %80 = sext i32 %79 to i64\l  %81 = call i32 @leakByte(i64 noundef %80)\l  store i32 %81, ptr %13, align 4\l  %82 = load i32, ptr %13, align 4\l  %83 = xor i32 113, %82\l  %84 = sext i32 %83 to i64\l  %85 = getelementptr inbounds [256 x i8], ptr @parity, i64 0, i64 %84\l  %86 = load i8, ptr %85, align 1\l  %87 = sext i8 %86 to i32\l  %88 = sub nsw i32 8, %87\l  %89 = load i32, ptr %3, align 4\l  %90 = add nsw i32 %89, %88\l  store i32 %90, ptr %3, align 4\l  br label %91\l}"];
	Node0x6000028e4b00 -> Node0x6000028e4c00;
	Node0x6000028e4c00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%91:\l91:                                               \l  %92 = load i32, ptr %12, align 4\l  %93 = add nsw i32 %92, 1\l  store i32 %93, ptr %12, align 4\l  br label %73, !llvm.loop !9\l}"];
	Node0x6000028e4c00 -> Node0x6000028e4a40;
	Node0x6000028e4b80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%94:\l94:                                               \l  br label %95\l}"];
	Node0x6000028e4b80 -> Node0x6000028e4bc0;
	Node0x6000028e4bc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3c7b170",label="{%95:\l95:                                               \l  %96 = load i32, ptr %11, align 4\l  %97 = add nsw i32 %96, 1\l  store i32 %97, ptr %11, align 4\l  br label %67, !llvm.loop !10\l}"];
	Node0x6000028e4bc0 -> Node0x6000028e49c0;
	Node0x6000028e4a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#88abfd70",label="{%98:\l98:                                               \l  %99 = call i32 @gettimeofday(ptr noundef %2, ptr noundef null)\l  %100 = getelementptr inbounds %struct.timeval, ptr %2, i32 0, i32 0\l  %101 = load i64, ptr %100, align 8\l  %102 = getelementptr inbounds %struct.timeval, ptr %1, i32 0, i32 0\l  %103 = load i64, ptr %102, align 8\l  %104 = sub nsw i64 %101, %103\l  %105 = mul nsw i64 %104, 1000\l  %106 = getelementptr inbounds %struct.timeval, ptr %2, i32 0, i32 1\l  %107 = load i32, ptr %106, align 8\l  %108 = getelementptr inbounds %struct.timeval, ptr %1, i32 0, i32 1\l  %109 = load i32, ptr %108, align 8\l  %110 = sub nsw i32 %107, %109\l  %111 = sdiv i32 %110, 1000\l  %112 = sext i32 %111 to i64\l  %113 = add nsw i64 %105, %112\l  %114 = trunc i64 %113 to i32\l  store i32 %114, ptr %14, align 4\l  %115 = load i32, ptr %4, align 4\l  %116 = load i32, ptr %14, align 4\l  %117 = load i32, ptr %4, align 4\l  %118 = sitofp i32 %117 to double\l  %119 = fmul double 1.000000e+03, %118\l  %120 = load i32, ptr %14, align 4\l  %121 = sitofp i32 %120 to double\l  %122 = fdiv double %119, %121\l  %123 = load i32, ptr %3, align 4\l  %124 = load i32, ptr %4, align 4\l  %125 = mul nsw i32 %124, 8\l  %126 = load i32, ptr %3, align 4\l  %127 = sitofp i32 %126 to double\l  %128 = fmul double %127, 1.250000e+01\l  %129 = load i32, ptr %4, align 4\l  %130 = sitofp i32 %129 to double\l  %131 = fdiv double %128, %130\l  %132 = call i32 (ptr, ...) @printf(ptr noundef @.str, i32 noundef %115, i32\l... noundef %116, double noundef %122, i32 noundef %123, i32 noundef %125, double\l... noundef %131)\l  %133 = load i32, ptr %9, align 4\l  %134 = call i32 (ptr, ...) @printf(ptr noundef @.str.1, i32 noundef %133)\l  %135 = load ptr, ptr %6, align 8\l  call void @free(ptr noundef %135)\l  ret void\l}"];
}
