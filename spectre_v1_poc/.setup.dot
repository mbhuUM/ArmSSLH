digraph "CFG for 'setup' function" {
	label="CFG for 'setup' function";

	Node0x600001635200 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%2:\l  %3 = alloca i32, align 4\l  %4 = alloca ptr, align 8\l  %5 = alloca ptr, align 8\l  %6 = alloca i32, align 4\l  store ptr %0, ptr %4, align 8\l  store ptr %1, ptr %5, align 8\l  %7 = load ptr, ptr @array1, align 8\l  %8 = icmp ne ptr %7, null\l  br i1 %8, label %9, label %11\l|{<s0>T|<s1>F}}"];
	Node0x600001635200:s0 -> Node0x600001635240;
	Node0x600001635200:s1 -> Node0x6000016352c0;
	Node0x600001635240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%9:\l9:                                                \l  %10 = load ptr, ptr @array1, align 8\l  call void @free(ptr noundef %10)\l  br label %11\l}"];
	Node0x600001635240 -> Node0x6000016352c0;
	Node0x6000016352c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%11:\l11:                                               \l  %12 = load ptr, ptr @array2, align 8\l  %13 = icmp ne ptr %12, null\l  br i1 %13, label %16, label %14\l|{<s0>T|<s1>F}}"];
	Node0x6000016352c0:s0 -> Node0x600001635300;
	Node0x6000016352c0:s1 -> Node0x600001635380;
	Node0x600001635380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%14:\l14:                                               \l  %15 = call ptr @malloc(i64 noundef 2048) #5\l  store ptr %15, ptr @array2, align 8\l  br label %16\l}"];
	Node0x600001635380 -> Node0x600001635300;
	Node0x600001635300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%16:\l16:                                               \l  %17 = load ptr, ptr @array2, align 8\l  %18 = icmp ne ptr %17, null\l  br i1 %18, label %22, label %19\l|{<s0>T|<s1>F}}"];
	Node0x600001635300:s0 -> Node0x600001635340;
	Node0x600001635300:s1 -> Node0x600001635440;
	Node0x600001635440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%19:\l19:                                               \l  %20 = load ptr, ptr @__stderrp, align 8\l  %21 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %20, ptr noundef @.str,\l... i32 noundef 2048, i32 noundef 4, i32 noundef 512)\l  store i32 1, ptr %3, align 4\l  br label %117\l}"];
	Node0x600001635440 -> Node0x6000016354c0;
	Node0x600001635340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%22:\l22:                                               \l  %23 = load ptr, ptr %4, align 8\l  %24 = call i64 @strlen(ptr noundef %23)\l  %25 = add i64 %24, 1\l  %26 = load ptr, ptr %5, align 8\l  %27 = call i64 @strlen(ptr noundef %26)\l  %28 = add i64 %25, %27\l  %29 = add i64 %28, 1\l  %30 = call ptr @malloc(i64 noundef %29) #5\l  store ptr %30, ptr @array1, align 8\l  %31 = load ptr, ptr @array1, align 8\l  %32 = icmp ne ptr %31, null\l  br i1 %32, label %43, label %33\l|{<s0>T|<s1>F}}"];
	Node0x600001635340:s0 -> Node0x6000016355c0;
	Node0x600001635340:s1 -> Node0x600001635640;
	Node0x600001635640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%33:\l33:                                               \l  %34 = load ptr, ptr @__stderrp, align 8\l  %35 = load ptr, ptr %4, align 8\l  %36 = call i64 @strlen(ptr noundef %35)\l  %37 = load ptr, ptr %5, align 8\l  %38 = call i64 @strlen(ptr noundef %37)\l  %39 = add i64 %36, %38\l  %40 = add i64 %39, 2\l  %41 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %34, ptr noundef\l... @.str.1, i64 noundef %40)\l  %42 = load ptr, ptr @array2, align 8\l  call void @free(ptr noundef %42)\l  store ptr null, ptr @array2, align 8\l  store i32 1, ptr %3, align 4\l  br label %117\l}"];
	Node0x600001635640 -> Node0x6000016354c0;
	Node0x6000016355c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{%43:\l43:                                               \l  %44 = load ptr, ptr @array_size, align 8\l  %45 = icmp ne ptr %44, null\l  br i1 %45, label %56, label %46\l|{<s0>T|<s1>F}}"];
	Node0x6000016355c0:s0 -> Node0x600001635600;
	Node0x6000016355c0:s1 -> Node0x6000016357c0;
	Node0x6000016357c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%46:\l46:                                               \l  %47 = call ptr @malloc(i64 noundef 8) #5\l  store ptr %47, ptr @array_size, align 8\l  %48 = load ptr, ptr @array_size, align 8\l  %49 = icmp ne ptr %48, null\l  br i1 %49, label %55, label %50\l|{<s0>T|<s1>F}}"];
	Node0x6000016357c0:s0 -> Node0x600001635840;
	Node0x6000016357c0:s1 -> Node0x6000016358c0;
	Node0x6000016358c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%50:\l50:                                               \l  %51 = load ptr, ptr @__stderrp, align 8\l  %52 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %51, ptr noundef\l... @.str.2, i64 noundef 8)\l  %53 = load ptr, ptr @array2, align 8\l  call void @free(ptr noundef %53)\l  store ptr null, ptr @array2, align 8\l  %54 = load ptr, ptr @array1, align 8\l  call void @free(ptr noundef %54)\l  store ptr null, ptr @array1, align 8\l  store i32 1, ptr %3, align 4\l  br label %117\l}"];
	Node0x6000016358c0 -> Node0x6000016354c0;
	Node0x600001635840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%55:\l55:                                               \l  br label %56\l}"];
	Node0x600001635840 -> Node0x600001635600;
	Node0x600001635600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%56:\l56:                                               \l  %57 = load ptr, ptr %4, align 8\l  %58 = call i64 @strlen(ptr noundef %57)\l  %59 = add i64 %58, 1\l  %60 = load ptr, ptr @array_size, align 8\l  store i64 %59, ptr %60, align 8\l  %61 = load ptr, ptr @array1, align 8\l  %62 = load ptr, ptr %4, align 8\l  %63 = load ptr, ptr @array1, align 8\l  %64 = call i64 @llvm.objectsize.i64.p0(ptr %63, i1 false, i1 true, i1 false)\l  %65 = call ptr @__strcpy_chk(ptr noundef %61, ptr noundef %62, i64 noundef\l... %64) #6\l  %66 = load ptr, ptr @array1, align 8\l  %67 = load ptr, ptr @array_size, align 8\l  %68 = load i64, ptr %67, align 8\l  %69 = getelementptr inbounds i8, ptr %66, i64 %68\l  %70 = load ptr, ptr %5, align 8\l  %71 = load ptr, ptr @array1, align 8\l  %72 = load ptr, ptr @array_size, align 8\l  %73 = load i64, ptr %72, align 8\l  %74 = getelementptr inbounds i8, ptr %71, i64 %73\l  %75 = call i64 @llvm.objectsize.i64.p0(ptr %74, i1 false, i1 true, i1 false)\l  %76 = call ptr @__strcpy_chk(ptr noundef %69, ptr noundef %70, i64 noundef\l... %75) #6\l  %77 = load ptr, ptr @array2_ctx, align 8\l  %78 = icmp ne ptr %77, null\l  br i1 %78, label %112, label %79\l|{<s0>T|<s1>F}}"];
	Node0x600001635600:s0 -> Node0x600001635a80;
	Node0x600001635600:s1 -> Node0x600001635b00;
	Node0x600001635b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%79:\l79:                                               \l  %80 = call ptr @malloc(i64 noundef 40) #5\l  store ptr %80, ptr @array2_ctx, align 8\l  %81 = load ptr, ptr @array2_ctx, align 8\l  %82 = icmp ne ptr %81, null\l  br i1 %82, label %89, label %83\l|{<s0>T|<s1>F}}"];
	Node0x600001635b00:s0 -> Node0x600001635b80;
	Node0x600001635b00:s1 -> Node0x600001635c00;
	Node0x600001635c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%83:\l83:                                               \l  %84 = load ptr, ptr @__stderrp, align 8\l  %85 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %84, ptr noundef\l... @.str.3, i64 noundef 40)\l  %86 = load ptr, ptr @array2, align 8\l  call void @free(ptr noundef %86)\l  store ptr null, ptr @array2, align 8\l  %87 = load ptr, ptr @array1, align 8\l  call void @free(ptr noundef %87)\l  store ptr null, ptr @array1, align 8\l  %88 = load ptr, ptr @array_size, align 8\l  call void @free(ptr noundef %88)\l  store ptr null, ptr @array_size, align 8\l  store i32 1, ptr %3, align 4\l  br label %117\l}"];
	Node0x600001635c00 -> Node0x6000016354c0;
	Node0x600001635b80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%89:\l89:                                               \l  store i32 0, ptr %6, align 4\l  br label %90\l}"];
	Node0x600001635b80 -> Node0x600001635bc0;
	Node0x600001635bc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%90:\l90:                                               \l  %91 = load i32, ptr %6, align 4\l  %92 = icmp slt i32 %91, 4\l  br i1 %92, label %93, label %107\l|{<s0>T|<s1>F}}"];
	Node0x600001635bc0:s0 -> Node0x600001635d40;
	Node0x600001635bc0:s1 -> Node0x600001635dc0;
	Node0x600001635d40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%93:\l93:                                               \l  %94 = load ptr, ptr @array2, align 8\l  %95 = load i32, ptr %6, align 4\l  %96 = mul nsw i32 %95, 512\l  %97 = sext i32 %96 to i64\l  %98 = getelementptr inbounds i8, ptr %94, i64 %97\l  %99 = call ptr @cache_remove_prepare(ptr noundef %98)\l  %100 = load ptr, ptr @array2_ctx, align 8\l  %101 = load i32, ptr %6, align 4\l  %102 = sext i32 %101 to i64\l  %103 = getelementptr inbounds ptr, ptr %100, i64 %102\l  store ptr %99, ptr %103, align 8\l  br label %104\l}"];
	Node0x600001635d40 -> Node0x600001635e40;
	Node0x600001635e40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%104:\l104:                                              \l  %105 = load i32, ptr %6, align 4\l  %106 = add nsw i32 %105, 1\l  store i32 %106, ptr %6, align 4\l  br label %90, !llvm.loop !6\l}"];
	Node0x600001635e40 -> Node0x600001635bc0;
	Node0x600001635dc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%107:\l107:                                              \l  %108 = load ptr, ptr @array_size, align 8\l  %109 = call ptr @cache_remove_prepare(ptr noundef %108)\l  %110 = load ptr, ptr @array2_ctx, align 8\l  %111 = getelementptr inbounds ptr, ptr %110, i64 4\l  store ptr %109, ptr %111, align 8\l  br label %112\l}"];
	Node0x600001635dc0 -> Node0x600001635a80;
	Node0x600001635a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%112:\l112:                                              \l  %113 = load ptr, ptr @array_size, align 8\l  %114 = load i64, ptr %113, align 8\l  %115 = sub i64 %114, 1\l  %116 = mul i64 %115, 4\l  store i64 %116, ptr @training_offset, align 8\l  store i32 0, ptr %3, align 4\l  br label %117\l}"];
	Node0x600001635a80 -> Node0x6000016354c0;
	Node0x6000016354c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%117:\l117:                                              \l  %118 = load i32, ptr %3, align 4\l  ret i32 %118\l}"];
}
